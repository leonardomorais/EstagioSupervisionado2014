package Servicos;

import Classes.AtendimentoMesa;
import Classes.Produto;
import Consultas.ConsultaFuncionario;
import Consultas.ConsultaMesa;
import Consultas.ConsultaProduto;
import Relatorios.Relatorios;
import Validacoes.FormataMoeda;
import Validacoes.LimparCampos;
import Validacoes.PreencherTabela;
import Validacoes.RetornaData;
import Validacoes.RetornaDecimal;
import Validacoes.Rotinas;
import Validacoes.TeclasdeAtalho;
import Validacoes.ValidaBotoes;
import Validacoes.ValidaCampos;
import java.awt.event.KeyEvent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Leonardo
 */
public class TelaAtendimentoMesa extends javax.swing.JFrame {

    AtendimentoMesa atd = new AtendimentoMesa();
    Produto produto = new Produto();
    Relatorios report;

    RetornaData dataHora = new RetornaData();
    RetornaDecimal decimal = new RetornaDecimal();

    ValidaCampos campos = new ValidaCampos();
    LimparCampos limpar = new LimparCampos();

    MaskFormatter data;
    MaskFormatter hora;

    int rotina;
    
    TeclasdeAtalho atalho = new TeclasdeAtalho();

    /**
     * Creates new form AtendimentoMesa
     */
    public TelaAtendimentoMesa() {
        initComponents();  
        formatarTabela();
        rotina = Rotinas.padrao;
        validaEstadoCampos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSituacao = new javax.swing.ButtonGroup();
        jTabbedPaneAtendimentos = new javax.swing.JTabbedPane();
        atalho.adicionarAtalho(jTabbedPaneAtendimentos);
        jPanelAtendimento = new javax.swing.JPanel();
        jTextFieldNomeProduto = new javax.swing.JTextField();
        jBtAdicionar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtAdicionar, KeyEvent.VK_F2, 0);
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCdProduto = new javax.swing.JTextField();
        jButtonPesquisa = new javax.swing.JButton();
        atalho.adicionarAtalho(jButtonPesquisa, KeyEvent.VK_F8, 0);
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        try{       data = new MaskFormatter("##/##/####");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jFormattedTextFieldData = new JFormattedTextField(data);
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldNomeFunc = new javax.swing.JTextField();
        jTextFieldNrMesa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        atalho.adicionarAtalho(jButtonPesquisar, KeyEvent.VK_F7, 0);

        jTextFieldNrAtendimento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBtMesa = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtMesa, KeyEvent.VK_F4, 0);
        jLabel6 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldCdFunc = new javax.swing.JTextField();
        jSpnQuantidade = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        try{       hora = new MaskFormatter("##:##:##");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jTextFieldHoraAbre = new JFormattedTextField(hora);
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldTotalProduto = new javax.swing.JTextField();
        try{       hora = new MaskFormatter("##:##:##");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jTextFieldHoraFecha = new JFormattedTextField(hora);
        jBtRemover = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtRemover, KeyEvent.VK_F3, 0);
        jTextFieldVlUnitario = new javax.swing.JTextField();
        jPanelBotoes = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtNovo, KeyEvent.VK_F1, 0);
        jBtFechaAtendimento = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtFechaAtendimento, KeyEvent.VK_ENTER, 0);
        jBtCancelar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtCancelar, KeyEvent.VK_ESCAPE, 0);
        jPanelConsulta = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAtendimento = new javax.swing.JTable();
        jComboBoxConsulta = new javax.swing.JComboBox();
        jBtPesquisar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtPesquisar, KeyEvent.VK_F5, 0);
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAtendimentoProdutos = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jRadioButtonAbertos = new javax.swing.JRadioButton();
        jRadioButtonFechados = new javax.swing.JRadioButton();
        jTextFieldConsulta = new javax.swing.JTextField();
        jBtRelatorio = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtRelatorio,   KeyEvent.VK_F6, 0);
        jRadioButtonAmbos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Realizar Atendimento");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextFieldNomeProduto.setEnabled(false);

        jBtAdicionar.setText("Adicionar");
        jBtAdicionar.setToolTipText("Adicionar (F2)");
        jBtAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAdicionarActionPerformed(evt);
            }
        });

        jLabel4.setText("Produto");

        jTextFieldCdProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdProdutoFocusLost(evt);
            }
        });

        jButtonPesquisa.setText("Pesquisar");
        jButtonPesquisa.setToolTipText("Pesquisar (F8)");
        jButtonPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisaActionPerformed(evt);
            }
        });

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Valor", "Quantidade", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProdutos);

        jLabel3.setText("Data Atendimento");

        jFormattedTextFieldData.setEnabled(false);

        jLabel5.setText("Quantidade");

        jLabel9.setText("Hora Fechamento");

        jTextFieldNomeFunc.setEnabled(false);

        jTextFieldNrMesa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNrMesaFocusLost(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.setToolTipText("Pesquisar (F7)");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTextFieldNrAtendimento.setEnabled(false);

        jLabel2.setText("Nr Mesa");

        jBtMesa.setText("Mesa...");
        jBtMesa.setToolTipText("Mesa (F4)");
        jBtMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtMesaActionPerformed(evt);
            }
        });

        jLabel6.setText("Valor Unitário (R$)");

        jTextFieldTotal.setDocument(new FormataMoeda());
        jTextFieldTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotal.setEnabled(false);

        jLabel1.setText("Nr Atendimento");

        jLabel7.setText("Total (R$)");

        jTextFieldCdFunc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdFuncFocusLost(evt);
            }
        });

        jSpnQuantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        campos.validaSpinner(jSpnQuantidade);
        jSpnQuantidade.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnQuantidadeStateChanged(evt);
            }
        });

        jLabel11.setText("Funcionário");

        jTextFieldHoraAbre.setEnabled(false);

        jLabel8.setText("Hora Abertura");

        jLabel10.setText("Valor Total");

        jTextFieldTotalProduto.setDocument(new FormataMoeda());
        jTextFieldTotalProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotalProduto.setEnabled(false);

        jTextFieldHoraFecha.setEnabled(false);

        jBtRemover.setText("Remover");
        jBtRemover.setToolTipText("Remover (F3)");
        jBtRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRemoverActionPerformed(evt);
            }
        });

        jTextFieldVlUnitario.setDocument(new FormataMoeda());
        jTextFieldVlUnitario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldVlUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldVlUnitarioKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotoesLayout = new javax.swing.GroupLayout(jPanelBotoes);
        jPanelBotoes.setLayout(jPanelBotoesLayout);
        jPanelBotoesLayout.setHorizontalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        jPanelBotoesLayout.setVerticalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jBtNovo.setText("Iniciar Atendimento");
        jBtNovo.setToolTipText("Iniciar Atendimento (F1)");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtFechaAtendimento.setText("Fechar Atendimento");
        jBtFechaAtendimento.setToolTipText("Fechar Atendimento (Enter)");
        jBtFechaAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFechaAtendimentoActionPerformed(evt);
            }
        });

        jBtCancelar.setText("Cancelar Atendimento");
        jBtCancelar.setToolTipText("Cancelar Atendimento (Esc)");
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAtendimentoLayout = new javax.swing.GroupLayout(jPanelAtendimento);
        jPanelAtendimento.setLayout(jPanelAtendimentoLayout);
        jPanelAtendimentoLayout.setHorizontalGroup(
            jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNrAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldNrMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtMesa)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldHoraAbre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldHoraFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)))
                        .addGap(55, 55, 55)
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAtendimentoLayout.createSequentialGroup()
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jBtNovo)
                                .addGap(18, 18, 18)
                                .addComponent(jPanelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtFechaAtendimento)
                                .addGap(18, 18, 18)
                                .addComponent(jBtCancelar)))
                        .addContainerGap())
                    .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel6))
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jSpnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldVlUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldTotalProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                                .addComponent(jBtAdicionar)
                                .addGap(18, 18, 18)
                                .addComponent(jBtRemover)
                                .addGap(35, 35, 35)))
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAtendimentoLayout.createSequentialGroup()
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldCdFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNomeFunc))
                            .addGroup(jPanelAtendimentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldCdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisa)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNomeProduto)))
                        .addGap(40, 40, 40))))
        );
        jPanelAtendimentoLayout.setVerticalGroup(
            jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAtendimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNrAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNrMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtMesa)
                    .addComponent(jTextFieldHoraAbre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldHoraFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCdFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jTextFieldNomeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisa)
                    .addComponent(jTextFieldNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldTotalProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtRemover)
                        .addComponent(jBtAdicionar)
                        .addComponent(jTextFieldVlUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBtCancelar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtNovo)
                            .addComponent(jBtFechaAtendimento))))
                .addContainerGap())
        );

        jTabbedPaneAtendimentos.addTab("Realizar Atendimento", jPanelAtendimento);

        jLabel12.setText("Filtro da Consulta");

        jTableAtendimento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nr Atendimento", "Mesa", "Cd Funcionário", "Funcionário", "Hora Início", "Hora Fim", "Data", "Situação", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAtendimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAtendimentoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAtendimento);

        jComboBoxConsulta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Nr Atendimento", "Nr Mesa", "Funcionário" }));
        jComboBoxConsulta.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxConsultaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jBtPesquisar.setText("Pesquisar");
        jBtPesquisar.setToolTipText("Pesquisar (F5)");
        jBtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarActionPerformed(evt);
            }
        });

        jTableAtendimentoProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cd Produto", "Produto", "Valor Unitário", "Quantidade", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableAtendimentoProdutos);

        jLabel13.setText("Mostrar os Atendimentos");

        buttonGroupSituacao.add(jRadioButtonAbertos);
        jRadioButtonAbertos.setSelected(true);
        jRadioButtonAbertos.setText("Abertos");
        jRadioButtonAbertos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAbertosActionPerformed(evt);
            }
        });

        buttonGroupSituacao.add(jRadioButtonFechados);
        jRadioButtonFechados.setText("Fechados");

        jBtRelatorio.setText("Relatório");
        jBtRelatorio.setToolTipText("Relatório (F6)");
        jBtRelatorio.setEnabled(false);
        jBtRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRelatorioActionPerformed(evt);
            }
        });

        buttonGroupSituacao.add(jRadioButtonAmbos);
        jRadioButtonAmbos.setText("Ambos");

        javax.swing.GroupLayout jPanelConsultaLayout = new javax.swing.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanelConsultaLayout.createSequentialGroup()
                        .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxConsulta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                                .addComponent(jRadioButtonAbertos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonFechados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonAmbos)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtPesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(jBtRelatorio))))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisar)
                    .addComponent(jRadioButtonAbertos)
                    .addComponent(jRadioButtonFechados)
                    .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtRelatorio)
                    .addComponent(jRadioButtonAmbos))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel13.getAccessibleContext().setAccessibleName("Mostrar somente \\natendimentos fechados ?");

        jTabbedPaneAtendimentos.addTab("Consulta", jPanelConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jTabbedPaneAtendimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPaneAtendimentos))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        ConsultaFuncionario csFunc = new ConsultaFuncionario(this, true);
        csFunc.setVisible(true);

        csFunc.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {

                if (atd.getFuncionario().getCd_funcionario() == 0) {
                    jTextFieldCdFunc.setText("");
                    jTextFieldNomeFunc.setText("");
                } else {
                    jTextFieldCdFunc.setText(atd.getFuncionario().getCd_funcionario().toString());
                    atd.getFuncionario().retornaFuncionario(atd.getFuncionario(), false);
                    jTextFieldNomeFunc.setText(atd.getFuncionario().getPessoa().getNome());
                    atd.alterar(atd, "CD_FUNCIONARIO");
                }
            }
        });
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisaActionPerformed
        ConsultaProduto csProd = new ConsultaProduto(this, true, false);
        csProd.setVisible(true);

        csProd.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {

                if (produto.getCdProduto() == 0) {
                    jTextFieldNomeProduto.setText("");
                    jTextFieldCdProduto.setText("");
                } else {
                    jTextFieldCdProduto.setText(produto.getCdProduto().toString());
                    produto.retornaProduto(produto, false);

                    preencherProduto();
                }
            }
        });
    }//GEN-LAST:event_jButtonPesquisaActionPerformed

    private void jBtMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtMesaActionPerformed
        ConsultaMesa csMesa = new ConsultaMesa(this, true);
        csMesa.setVisible(true);

        csMesa.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {

                if (atd.getMesa().getNrMesa() == 0) {
                    jTextFieldNrMesa.setText("");
                }
                else if (atd.VerificaMesaDisponivel(atd)){
                    jTextFieldNrMesa.setText("");
                }
                else {
                    jTextFieldNrMesa.setText(atd.getMesa().getNrMesa().toString());
                    atd.alterar(atd, "NR_MESA");
                    //atualizarAtendimento("NR_MESA");
                }
            }
        });
    }//GEN-LAST:event_jBtMesaActionPerformed

    private void jTextFieldCdFuncFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdFuncFocusLost
        if (!jTextFieldCdFunc.getText().equals("")) {
            try {
                atd.getFuncionario().setCd_funcionario(Integer.parseInt(jTextFieldCdFunc.getText()));
                atd.getFuncionario().retornaFuncionario(atd.getFuncionario(), false);
                if (atd.getFuncionario().getPessoa().getNome().equals("")) {
                    jTextFieldCdFunc.setText("");
                    jTextFieldNomeFunc.setText("");
                    jTextFieldCdFunc.grabFocus();
                } else {
                    jTextFieldNomeFunc.setText(atd.getFuncionario().getPessoa().getNome());
                    atd.alterar(atd, "CD_FUNCIONARIO");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor informe um código!");
                jTextFieldCdFunc.setText("");
                jTextFieldNomeFunc.setText("");
                jTextFieldCdFunc.grabFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldCdFuncFocusLost

    private void jBtRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRemoverActionPerformed
        int linha = jTableProdutos.getSelectedRow();
        if (linha >= 0) {
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente remover este produto do atendimento ?",
                    "Remover Produto", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {

                DefaultTableModel tabela = (DefaultTableModel) jTableProdutos.getModel();
                // devolve os produtos ao estoque

                produto.alteraQtAtual(produto);
                // 
                atd.getAtdProdutos().setNrAtendimento(Integer.parseInt(jTextFieldNrAtendimento.getText()));
                atd.getAtdProdutos().getProduto().setCdProduto(Integer.parseInt(jTableProdutos.getValueAt(linha, 0).toString()));
                atd.getAtdProdutos().excluir(atd.getAtdProdutos());

                tabela.removeRow(linha);
                jTextFieldTotal.setText(decimal.retornaDecimal(atd.retornaTotalAtendimento(jTableProdutos), 6));

                try{
                    atd.setVlTotal(Double.parseDouble(jTextFieldTotal.getText().replace(".", "").replace(",", ".")));
                }
                catch (NumberFormatException ex){
                    atd.setVlTotal(0.00);
                }
                
                atd.alterar(atd, "VL_TOTAL");
            }
        }
    }//GEN-LAST:event_jBtRemoverActionPerformed

    private void jBtAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAdicionarActionPerformed
        if (jTextFieldCdProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe o produto que deseja adicionar!");
            jTextFieldCdProduto.grabFocus();
        } else {
            adicionarProdutos();
            jTextFieldTotal.setText(decimal.retornaDecimal(atd.retornaTotalAtendimento(jTableProdutos), 6));
            produto.setQtAtual(produto.getQtAtual() - Integer.parseInt(jSpnQuantidade.getValue().toString()));
            produto.alteraQtAtual(produto);
            
            atd.setVlTotal(Double.parseDouble(jTextFieldTotal.getText().replace(".", "").replace(",", ".")));
            
            atd.alterar(atd, "VL_TOTAL");
        }
    }//GEN-LAST:event_jBtAdicionarActionPerformed

    private void jTextFieldNrMesaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNrMesaFocusLost
        if (!jTextFieldNrMesa.getText().equals("")) {
            try {
                atd.getMesa().setNrMesa(Integer.parseInt(jTextFieldNrMesa.getText()));
                if (atd.VerificaMesaDisponivel(atd)) {
                    atd.getMesa().retornaMesa(atd.getMesa(), false);
                    atd.alterar(atd, "NR_MESA");

                    if (atd.getMesa().getDsMesa().equals("")) {
                        jTextFieldNrMesa.setText("");
                        jTextFieldNrMesa.grabFocus();
                    }
                } else {
                    jTextFieldNrMesa.setText("");
                    jTextFieldNrMesa.grabFocus();
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor informe um código!");
                jTextFieldNrMesa.setText("");
                jTextFieldNrMesa.grabFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldNrMesaFocusLost

    private void jSpnQuantidadeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnQuantidadeStateChanged
        try {
            double preco = Double.parseDouble(jTextFieldVlUnitario.getText()
                    .replace(".", "").replace(",", "."));
            if (preco > 0) {
                preencherTotalProduto();
            }
        } catch (NumberFormatException ex) {
            jTextFieldTotalProduto.setText("");
        }
    }//GEN-LAST:event_jSpnQuantidadeStateChanged

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        int linhas = jTableProdutos.getRowCount();
        if (linhas > 0){
            int opcao = JOptionPane.showConfirmDialog(null, "Os atendimentos cancelados não serão salvos no sistema.\n"
                + "Deseja cancelar este atendimento ?", "Cancelar Atendimento", JOptionPane.YES_NO_OPTION);
        
        if (opcao == JOptionPane.YES_OPTION) {
        
            if (!jTextFieldNrAtendimento.getText().isEmpty()) {
                atd.setNrAtendimento(Integer.parseInt(jTextFieldNrAtendimento.getText()));
                atd.getAtdProdutos().setNrAtendimento(atd.getNrAtendimento());
                
                //exclui os produtos e devolve a quantidade ao estoque
                atd.getAtdProdutos().excluirTodos(atd.getAtdProdutos());
                 
                atd.excluir(atd);
                
                rotina = Rotinas.padrao;
                validaEstadoCampos();
                limpar.limparCampos(jPanelAtendimento);
                limpar.limparJtable(jTableProdutos);
                jSpnQuantidade.setValue(1);
                }
            }
        }
        else{
            rotina = Rotinas.padrao;
            validaEstadoCampos();
            limpar.limparCampos(jPanelAtendimento);
            limpar.limparJtable(jTableProdutos);
            jSpnQuantidade.setValue(1);
        } 
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jTextFieldCdProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdProdutoFocusLost
        if (!jTextFieldCdProduto.getText().equals("")) {
            try {
                produto.setCdProduto(Integer.parseInt(jTextFieldCdProduto.getText()));
                produto.retornaProduto(produto, false);

                if (produto.getDsProduto().equals("")) {
                    jTextFieldCdProduto.setText("");
                    jTextFieldNomeProduto.setText("");
                    jTextFieldCdProduto.grabFocus();
                } else {
                    preencherProduto();
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor informe um código!");
                jTextFieldCdProduto.setText("");
                jTextFieldNomeProduto.setText("");
                jTextFieldCdProduto.grabFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldCdProdutoFocusLost

    private void jBtFechaAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFechaAtendimentoActionPerformed
        int linhas = jTableProdutos.getRowCount();
        if (jTextFieldNrMesa.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe a mesa do atendimento!");
            jTextFieldNrMesa.grabFocus();
        } else if (jTextFieldCdFunc.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe o funcionário do atendimento!");
            jTextFieldCdFunc.grabFocus();
        } else if (linhas < 1) {
            JOptionPane.showMessageDialog(null, "Por favor adicione produtos no atendimento!");
            jTextFieldCdProduto.grabFocus();
        } else {

            int opcao = JOptionPane.showConfirmDialog(null, "Deseja encerrar este atendimento ?", "Encerrar Atendimento", JOptionPane.YES_NO_OPTION);

            if (opcao == JOptionPane.YES_OPTION) {
                jTextFieldHoraFecha.setText(dataHora.retornaHoraAtual());
                fecharAtendimento();
                //JOptionPane.showMessageDialog(null, "Atendimento Encerrado");
            }
        }
    }//GEN-LAST:event_jBtFechaAtendimentoActionPerformed

    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked
        int linha = jTableProdutos.getSelectedRow();
        if (linha >= 0) {
            produto.setCdProduto(Integer.parseInt(jTableProdutos.getValueAt(linha, 0).toString()));
            produto.retornaProduto(produto, true);
            produto.setQtAtual(produto.getQtAtual() + Integer.parseInt(jTableProdutos.getValueAt(linha, 3).toString()));
        }
    }//GEN-LAST:event_jTableProdutosMouseClicked

    private void jBtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarActionPerformed
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableAtendimento, new int[]{70, 50, 70, 195, 70, 70, 70, 60, 70});
        report = new Relatorios();
        if (jRadioButtonAbertos.isSelected()){
            atd.setAbertoFechado("A");
        }
        else if (jRadioButtonFechados.isSelected()){
            atd.setAbertoFechado("F");
        }
        else{
            atd.setAbertoFechado("AMBOS");
        }
        
        switch (jComboBoxConsulta.getSelectedIndex()) {
            case 0:
                // Consultar Geral
                preencher.PreencherJtableGenerico(jTableAtendimento, atd.consultarGeral(atd));
                editaBotao(preencher.Vazia());
                report.setConsulta(atd.consultarGeral(atd));
                break;
            case 1:
                // Consultar por Nr de Atendimento
                try {
                    atd.setNrAtendimento(Integer.parseInt(jTextFieldConsulta.getText()));
                    preencher.PreencherJtableGenerico(jTableAtendimento,
                            atd.consultarNrAtendimento(atd));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
         
                } catch (NumberFormatException ex) {
                    limpar.limparJtable(jTableAtendimentoProdutos);
                    JOptionPane.showMessageDialog(null, "Informe um número de atendimento para pesquisar");
                    editaBotao(true);
                }
            break;
                
            case 2:
                // Consultar por Nr da Mesa
                try {
                    atd.getMesa().setNrMesa(Integer.parseInt(jTextFieldConsulta.getText()));
                    preencher.PreencherJtableGenerico(jTableAtendimento,
                            atd.consultarNrMesa(atd));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                } 
                catch (NumberFormatException ex) {
                    limpar.limparJtable(jTableAtendimentoProdutos);
                    JOptionPane.showMessageDialog(null, "Informe um número de mesa para pesquisar");
                    editaBotao(true);
                }

            break;

            default:
                // Consultar por nome do funcionário
                atd.getFuncionario().getPessoa().setNome(jTextFieldConsulta.getText().toUpperCase());
                preencher.PreencherJtableGenerico(jTableAtendimento,
                        atd.consultarNomeFuncionario(atd));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
                
            break;    
        }
    }//GEN-LAST:event_jBtPesquisarActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        iniciarAtendimento();
        rotina = Rotinas.incluir;
        validaEstadoCampos();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jTableAtendimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAtendimentoMouseClicked
        PreencherTabela tabela = new PreencherTabela();
        int linha = jTableAtendimento.getSelectedRow();
        if (linha >= 0) {
            atd.setNrAtendimento(Integer.parseInt(jTableAtendimento.getValueAt(linha, 0).toString()));
            atd.getAtdProdutos().setNrAtendimento(atd.getNrAtendimento());
            tabela.FormatarJtable(jTableAtendimentoProdutos, new int[]{100, 275, 100, 100, 100});
            tabela.PreencherJtableGenerico(jTableAtendimentoProdutos,
                    atd.getAtdProdutos().consultarProdutos(atd.getAtdProdutos()));
        } else {
            limpar.limparJtable(jTableAtendimentoProdutos);
        }
    }//GEN-LAST:event_jTableAtendimentoMouseClicked

    private void jComboBoxConsultaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void jBtRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRelatorioActionPerformed
        report.setSubreport(true);
        report.setTabela("ATENDIMENTO_MESA");
        report.gerarRelatorio(report);
        jBtPesquisarActionPerformed(null);
    }//GEN-LAST:event_jBtRelatorioActionPerformed

    private void jRadioButtonAbertosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAbertosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonAbertosActionPerformed

    private void jTextFieldVlUnitarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldVlUnitarioKeyTyped
        campos.validaCamposApenasNumeros(evt);
    }//GEN-LAST:event_jTextFieldVlUnitarioKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimentoMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimentoMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimentoMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimentoMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAtendimentoMesa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupSituacao;
    private javax.swing.JButton jBtAdicionar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtFechaAtendimento;
    private javax.swing.JButton jBtMesa;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesquisar;
    private javax.swing.JButton jBtRelatorio;
    private javax.swing.JButton jBtRemover;
    private javax.swing.JButton jButtonPesquisa;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JComboBox jComboBoxConsulta;
    private javax.swing.JFormattedTextField jFormattedTextFieldData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelAtendimento;
    private javax.swing.JPanel jPanelBotoes;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JRadioButton jRadioButtonAbertos;
    private javax.swing.JRadioButton jRadioButtonAmbos;
    private javax.swing.JRadioButton jRadioButtonFechados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpnQuantidade;
    private javax.swing.JTabbedPane jTabbedPaneAtendimentos;
    private javax.swing.JTable jTableAtendimento;
    private javax.swing.JTable jTableAtendimentoProdutos;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTextField jTextFieldCdFunc;
    private javax.swing.JTextField jTextFieldCdProduto;
    private javax.swing.JTextField jTextFieldConsulta;
    private javax.swing.JTextField jTextFieldHoraAbre;
    private javax.swing.JTextField jTextFieldHoraFecha;
    private javax.swing.JTextField jTextFieldNomeFunc;
    private javax.swing.JTextField jTextFieldNomeProduto;
    private javax.swing.JTextField jTextFieldNrAtendimento;
    private javax.swing.JTextField jTextFieldNrMesa;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JTextField jTextFieldTotalProduto;
    private javax.swing.JTextField jTextFieldVlUnitario;
    // End of variables declaration//GEN-END:variables

    public void preencherProduto() {
        jTextFieldNomeProduto.setText(produto.getDsProduto());
        int max = produto.getQtAtual();
        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, max, 1);
        jSpnQuantidade.setModel(model);
        jTextFieldVlUnitario.setText(decimal.retornaDecimal(produto.getVlProduto(), 6));
        preencherTotalProduto();
        campos.validaSpinner(jSpnQuantidade);
    }

    public void preencherTotalProduto() {
        double preco = Double.parseDouble(jTextFieldVlUnitario.getText()
                .replace(".", "").replace(",", "."));

        int qt = Integer.parseInt(jSpnQuantidade.getValue().toString());
        jTextFieldTotalProduto.setText(decimal.retornaDecimal(qt * preco, 6));

    }

    public void adicionarProdutos() {
        DefaultTableModel tabela = (DefaultTableModel) jTableProdutos.getModel();
        SpinnerNumberModel spn = (SpinnerNumberModel) jSpnQuantidade.getModel();

        String cd = jTextFieldCdProduto.getText();
        double valor = Double.parseDouble(jTextFieldVlUnitario.getText()
                .replace(".", "").replace(",", "."));
        int quantidade = Integer.parseInt(jSpnQuantidade.getValue().toString());
        int max = (int) spn.getMaximum();
        int linhas = jTableProdutos.getRowCount();

        boolean repetido = false;

        int posicao = linhas;

        if (linhas < 0) {
            tabela.setNumRows(linhas + 1);
        } else {
            for (int i = 0; i < linhas; i++) {
                if (jTableProdutos.getValueAt(i, 0).toString().equals(cd)) {
                    repetido = true;
                    posicao = i;
                }
            }

            if (repetido) {
                int qtTabela = Integer.parseInt(jTableProdutos.getValueAt(posicao, 3).toString());

                if (quantidade + qtTabela > max) {
                    JOptionPane.showMessageDialog(null, "Quantidade indisponível para este produto!");
                    quantidade = qtTabela;
                } else {
                    quantidade = quantidade + qtTabela;
                    atd.getAtdProdutos().setNrAtendimento(Integer.parseInt(jTextFieldNrAtendimento.getText()));
                    atd.getAtdProdutos().getProduto().setCdProduto(Integer.parseInt(cd));
                    atd.getAtdProdutos().excluir(atd.getAtdProdutos());
                }
            } else {
                tabela.setNumRows(linhas + 1);
            }
        }
        tabela.setValueAt(cd, posicao, 0);
        tabela.setValueAt(jTextFieldNomeProduto.getText(), posicao, 1);
        tabela.setValueAt(decimal.retornaDecimal(valor), posicao, 2);
        tabela.setValueAt(quantidade, posicao, 3);
        double total = quantidade * valor;
        tabela.setValueAt(decimal.retornaDecimal(total), posicao, 4);

        // grava os produtos do atendimento
        atd.getAtdProdutos().setNrAtendimento(Integer.parseInt(jTextFieldNrAtendimento.getText()));
        atd.getAtdProdutos().getProduto().setCdProduto(Integer.parseInt(cd));
        atd.getAtdProdutos().setQuantidade(quantidade);
        atd.getAtdProdutos().setValor(valor);
        atd.getAtdProdutos().incluir(atd.getAtdProdutos());
    }

    public void formatarTabela() {
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableProdutos, new int[]{100, 280, 100, 100, 100});
    }

    public void iniciarAtendimento() {
        jTextFieldHoraAbre.setText(dataHora.retornaHoraAtual());
        //jFormattedTextFieldData.setText(dataHora.retornaDataAtual(false));
        jFormattedTextFieldData.setText(dataHora.retornaDataAtual());
        atd.setDtAtendimento(jFormattedTextFieldData.getText());
        atd.setHoraAbertura(jTextFieldHoraAbre.getText());
        atd.setAbertoFechado("A");
        atd.incluir(atd);
        jTextFieldNrAtendimento.setText(atd.getNrAtendimento().toString());
        this.setTitle("Atendimento Nr." + atd.getNrAtendimento());
    }

    public void fecharAtendimento() {
        rotina = Rotinas.padrao;

        atd.setAbertoFechado("F");
        atd.setNrAtendimento(Integer.parseInt(jTextFieldNrAtendimento.getText()));
        atd.getMesa().setNrMesa(Integer.parseInt(jTextFieldNrMesa.getText()));
        atd.getFuncionario().setCd_funcionario(Integer.parseInt(jTextFieldCdFunc.getText()));
        atd.setHoraAbertura(jTextFieldHoraAbre.getText());
        atd.setHoraFechamento(jTextFieldHoraFecha.getText());
        atd.setDtAtendimento(jFormattedTextFieldData.getText());
        atd.setVlTotal(Double.parseDouble(jTextFieldTotal.getText().replace(".", "").replace(",", ".")));

        atd.alterar(atd);

        TelaVendaCompra tela = new TelaVendaCompra();
        tela.setVisible(true);
        tela.CarregarAtendimento(jTableProdutos, atd);
        this.dispose();
    }


    public void limparCampos() {
        jSpnQuantidade.setValue(1);
        limpar.limparCampos(jPanelAtendimento);
    }

    public void exibirAtendimento(int nrAtendimento) {
        atd.setNrAtendimento(nrAtendimento);
        jTextFieldNrAtendimento.setText(atd.getNrAtendimento().toString());
        atd.retornaAtendimento(atd);

        if (atd.getMesa().getNrMesa() <= 0) {
            jTextFieldNrMesa.setText("");
        } else {
            jTextFieldNrMesa.setText(atd.getMesa().getNrMesa().toString());
        }
        jTextFieldHoraAbre.setText(atd.getHoraAbertura());
        jFormattedTextFieldData.setText(atd.getDtAtendimento());
        jTextFieldTotal.setText(decimal.retornaDecimal(atd.getVlTotal(), 6));
        if (atd.getFuncionario().getCd_funcionario() <= 0) {
            jTextFieldCdFunc.setText("");
        } else {
            jTextFieldCdFunc.setText(atd.getFuncionario().getCd_funcionario().toString());
            jTextFieldCdFuncFocusLost(null);
        }

        formatarTabela();
        atd.getAtdProdutos().setNrAtendimento(atd.getNrAtendimento());
        PreencherTabela preencher = new PreencherTabela();
        preencher.PreencherJtableGenerico(jTableProdutos, atd.getAtdProdutos().consultarProdutos(atd.getAtdProdutos()));
        rotina = Rotinas.incluir;
        validaEstadoCampos();
    }

    public void validaEstadoCampos() {
        ValidaBotoes botoes = new ValidaBotoes();
        botoes.validaEstadoCampos(jPanelAtendimento, rotina);
        jTextFieldNrAtendimento.setEnabled(false);
        jTextFieldHoraAbre.setEnabled(false);
        jTextFieldHoraFecha.setEnabled(false);
        jFormattedTextFieldData.setEnabled(false);
        jTextFieldNomeFunc.setEnabled(false);
        jTextFieldNomeProduto.setEnabled(false);
        jTextFieldTotal.setEnabled(false);
        jTextFieldTotalProduto.setEnabled(false);
    }
    
    public void editaBotao(boolean vazia) {
        if (vazia) {
            jBtRelatorio.setEnabled(false);
            jTextFieldConsulta.setText("");
            jTextFieldConsulta.grabFocus();
        } else {
            jBtRelatorio.setEnabled(true);
        }
    }
}
