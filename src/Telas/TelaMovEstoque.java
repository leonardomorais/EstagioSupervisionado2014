package Telas;

import Classes.MovEstoque;
import Relatorios.Relatorios;
import Validacoes.PreencherTabela;
import Validacoes.RetornaData;
import Validacoes.TeclasdeAtalho;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Leonardo
 */
public class TelaMovEstoque extends javax.swing.JFrame {

    MovEstoque estoque = new MovEstoque();
    RetornaData rdata = new RetornaData();
    Relatorios report = new Relatorios();

    MaskFormatter data;
    
    TeclasdeAtalho atalho = new TeclasdeAtalho();

    /**
     * Creates new form TelaMovEstoque
     */
    public TelaMovEstoque() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupData = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxConsulta = new javax.swing.JComboBox();
        jBtPesquisar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtPesquisar, KeyEvent.VK_F5, 0);
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsulta = new javax.swing.JTable();
        jTextFieldConsulta = new javax.swing.JTextField();
        jComboBoxAux = new javax.swing.JComboBox();
        try{       data = new MaskFormatter("##/##/####");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jFormattedTextFieldDataFinal = new JFormattedTextField(data);
        try{       data = new MaskFormatter("##/##/####");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jFormattedTextFieldDataInicial = new JFormattedTextField(data);
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRBtSim = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRBtSim, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK);
        jRBtNao = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRBtNao, KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK);
        jLabel5 = new javax.swing.JLabel();
        jBtRelatorio = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtRelatorio, KeyEvent.VK_F6, 0);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar Movimentação de Estoque");

        jLabel1.setText("Selecione o Filtro");

        jComboBoxConsulta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Cd Mov", "Cd Venda Compra", "Cd Produto", "Produto", "Tipo" }));
        jComboBoxConsulta.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxConsultaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jBtPesquisar.setText("Pesquisar");
        jBtPesquisar.setToolTipText("Pesquisar (F5)");
        jBtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarActionPerformed(evt);
            }
        });

        jTableConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cd Mov", "Cd Venda Compra", "Cd Produto", "Produto", "Qtd Anterior", "Qtd Atual", "Valor", "Valor Custo", "Data", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConsulta.setOpaque(false);
        jScrollPane1.setViewportView(jTableConsulta);

        jComboBoxAux.setEnabled(false);

        jLabel3.setText("Consulta");

        jLabel4.setText("Data Inicial");

        jLabel2.setText("Data Final");

        buttonGroupData.add(jRBtSim);
        jRBtSim.setSelected(true);
        jRBtSim.setText("Sim");
        jRBtSim.setToolTipText("Sim (Ctrl + S)");
        jRBtSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtSimActionPerformed(evt);
            }
        });

        buttonGroupData.add(jRBtNao);
        jRBtNao.setText("Não");
        jRBtNao.setToolTipText("Não (Ctrl + N)");
        jRBtNao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtNaoActionPerformed(evt);
            }
        });

        jLabel5.setText("Escolher Período");

        jBtRelatorio.setText("Relatório");
        jBtRelatorio.setToolTipText("Relatório (F6)");
        jBtRelatorio.setEnabled(false);
        jBtRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxAux, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRBtSim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRBtNao))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextFieldDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jFormattedTextFieldDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtPesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(jBtRelatorio)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxAux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRBtSim)
                            .addComponent(jRBtNao)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextFieldDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesquisar)
                            .addComponent(jBtRelatorio))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarActionPerformed
        if (jRBtNao.isSelected() || (jRBtSim.isSelected() && datasValidas())) {
            String data = jFormattedTextFieldDataFinal.getText();
            estoque.setDtMov(jFormattedTextFieldDataInicial.getText());

            if (jRBtNao.isSelected()){
                data = "";
                estoque.setDtMov("");
            }
            
            PreencherTabela preencher = new PreencherTabela();
            preencher.FormatarJtable(jTableConsulta, new int[]{60, 110, 100, 250, 80, 70, 70, 70, 70, 70});

            switch (jComboBoxConsulta.getSelectedIndex()) {
                case 0:
                    preencher.PreencherJtableGenerico(jTableConsulta, estoque.consultarGeral(estoque, data));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                break;

                case 1:
                    try {
                        estoque.setCdMov(Integer.parseInt(jTextFieldConsulta.getText()));
                        preencher.PreencherJtableGenerico(jTableConsulta, estoque.consultarCdMov(estoque,data));
                        report.setConsulta(preencher.getConsulta());
                        editaBotao(preencher.Vazia());
                    } 
                    catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Informe um código para pesquisar!");
                        editaBotao(true);
                    }
                break;

                case 2:
                    try {
                        estoque.setCdVendaCompra(Integer.parseInt(jTextFieldConsulta.getText()));
                        preencher.PreencherJtableGenerico(jTableConsulta, estoque.consultarCdVendaCompra(estoque,data));
                        report.setConsulta(preencher.getConsulta());
                        editaBotao(preencher.Vazia());
                    } 
                    catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Informe um código para pesquisar!");
                        editaBotao(true);
                    }
                    break;

                case 3:
                    try {
                        estoque.setCdProduto(Integer.parseInt(jTextFieldConsulta.getText()));
                        preencher.PreencherJtableGenerico(jTableConsulta, estoque.consultarCdProduto(estoque,data));
                        report.setConsulta(preencher.getConsulta());
                        editaBotao(preencher.Vazia());
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Informe um código para pesquisar!");
                        editaBotao(true);
                    }
                    break;

                case 4:
                    preencher.PreencherJtableGenerico(jTableConsulta,
                            estoque.consultarProduto(jTextFieldConsulta.getText().toUpperCase(),estoque, data));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                    
                break;

                default:
                    estoque.setEntrada(jComboBoxAux.getSelectedItem().toString().toUpperCase().substring(0, 1));
                    preencher.PreencherJtableGenerico(jTableConsulta, estoque.consultarTipo(estoque,data));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                    
            }
        }
    }//GEN-LAST:event_jBtPesquisarActionPerformed

    private void jComboBoxConsultaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible
        switch (jComboBoxConsulta.getSelectedIndex()) {
            case 0:
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(false);
                jComboBoxAux.removeAllItems();
                jComboBoxAux.setEnabled(false);
                break;

            case 5:
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(false);
                jComboBoxAux.removeAllItems();
                jComboBoxAux.addItem("Entrada");
                jComboBoxAux.addItem("Saída");
                jComboBoxAux.setEnabled(true);
                break;

            default:
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(true);
                jComboBoxAux.removeAllItems();
                jComboBoxAux.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible

    private void jRBtNaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtNaoActionPerformed
        jFormattedTextFieldDataInicial.setText("");
        jFormattedTextFieldDataFinal.setText("");
        jFormattedTextFieldDataInicial.setEnabled(false);
        jFormattedTextFieldDataFinal.setEnabled(false);
        jFormattedTextFieldDataInicial.grabFocus();
    }//GEN-LAST:event_jRBtNaoActionPerformed

    private void jRBtSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtSimActionPerformed
        jFormattedTextFieldDataInicial.setEnabled(true);
        jFormattedTextFieldDataFinal.setEnabled(true);
        jFormattedTextFieldDataInicial.setText("");
        jFormattedTextFieldDataFinal.setText("");
        jFormattedTextFieldDataInicial.grabFocus();
    }//GEN-LAST:event_jRBtSimActionPerformed

    private void jBtRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRelatorioActionPerformed
        HashMap params = new HashMap();
        report.setTabela("MOV_ESTOQUE");
        report.setSubreport(false);
        if (jRBtSim.isSelected()){
            params.put("PERIODO", "DE "+jFormattedTextFieldDataInicial.getText()+" A "
            +jFormattedTextFieldDataFinal.getText());
        }
        else{
            params.put("PERIODO", "TODOS");
        }
        if (jComboBoxConsulta.getSelectedIndex() == 2){
            params.put("VENDA_COMPRA", jTextFieldConsulta.getText());
        }
        else{
            params.put("VENDA_COMPRA", "TODAS");
        }
        if (jComboBoxConsulta.getSelectedIndex() == 3){
            params.put("PRODUTO", jTextFieldConsulta.getText());
        }
        else{
            params.put("PRODUTO", "TODOS");
        }
        if (jComboBoxConsulta.getSelectedIndex() == 5){
            params.put("TIPO", jComboBoxAux.getSelectedItem().toString());
        }
        else{
            params.put("TIPO","ENTRADA E SAÍDA");
        }
        
        report.gerarRelatorio(report, params);
    }//GEN-LAST:event_jBtRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMovEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMovEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMovEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMovEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMovEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupData;
    private javax.swing.JButton jBtPesquisar;
    private javax.swing.JButton jBtRelatorio;
    private javax.swing.JComboBox jComboBoxAux;
    private javax.swing.JComboBox jComboBoxConsulta;
    private javax.swing.JFormattedTextField jFormattedTextFieldDataFinal;
    private javax.swing.JFormattedTextField jFormattedTextFieldDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRBtNao;
    private javax.swing.JRadioButton jRBtSim;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableConsulta;
    private javax.swing.JTextField jTextFieldConsulta;
    // End of variables declaration//GEN-END:variables

    private boolean datasValidas() {
        boolean valida = false;

        String dt1 = jFormattedTextFieldDataInicial.getText();
        String dt2 = jFormattedTextFieldDataFinal.getText();

        if (!rdata.dataExiste(dt1) || (!rdata.dataExiste(dt2))) {
            JOptionPane.showMessageDialog(null, "Por favor, informe duas datas validas");
            jFormattedTextFieldDataInicial.setText("");
            jFormattedTextFieldDataFinal.setText("");
            jFormattedTextFieldDataInicial.grabFocus();
        } else if (rdata.comparaData(dt1, dt2) > 0) {
            JOptionPane.showMessageDialog(null, "Datas ou intervalo entre datas inválido!");
        } else {
            valida = true;
        }
        return valida;
    }
    
    public void editaBotao(boolean vazia) {
        if (vazia) {
            jBtRelatorio.setEnabled(false);
            jTextFieldConsulta.setText("");
            jTextFieldConsulta.grabFocus();
        } else {
            jBtRelatorio.setEnabled(true);
        }
    }

}
