package Telas;

import Classes.Pagamento;
import Consultas.ConsultaAgenciaConta;
import Consultas.ConsultaClienteFornecedor;
import Consultas.ConsultaTipoPagamento;
import Relatorios.Relatorios;
import Validacoes.LimparCampos;
import Validacoes.PreencherTabela;
import Validacoes.RetornaData;
import Validacoes.RetornaDecimal;
import Validacoes.Rotinas;
import Validacoes.TeclasdeAtalho;
import Validacoes.ValidaBotoes;
import Validacoes.ValidaCampos;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Leonardo
 */
public class TelaPagamento extends javax.swing.JFrame {

    Pagamento pagamento = new Pagamento();
    Relatorios report = new Relatorios();
    List<Integer> parcelas = new ArrayList<Integer>();

    RetornaDecimal decimal = new RetornaDecimal();
    RetornaData data = new RetornaData();
    LimparCampos limpar = new LimparCampos();
    int rotina;
    
    TeclasdeAtalho atalho = new TeclasdeAtalho();

    /**
     * Creates new form TelaPagamento
     */
    public TelaPagamento() {
        initComponents();
        rotina = Rotinas.padrao;
        pagamento.getParcelas().getContas().getVendaCompra().getOperacao().retornaComboOperacao(jComboBoxOperacao, "TODOS");
        validaEstadoCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGroupTipo = new javax.swing.ButtonGroup();
        buttonGroupSituacao = new javax.swing.ButtonGroup();
        jTabbedPanePagamentos = new javax.swing.JTabbedPane();
        atalho.adicionarAtalho(jTabbedPanePagamentos);
        jPanelPagamento = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCdAgencia = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jTextFieldAgenciaConta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCdPagamento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jBtPesquisarTpPagamento = new javax.swing.JButton();
        jTextFieldCdTipo = new javax.swing.JTextField();
        jTextFieldPagamento = new javax.swing.JTextField();
        jBtNovo = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtNovo, KeyEvent.VK_F1, 0);
        jBtCancelar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtCancelar, KeyEvent.VK_ESCAPE, 0);
        jBtGravar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtGravar, KeyEvent.VK_ENTER, 0);
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableParcelas = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCdPessoa = new javax.swing.JTextField();
        jBtPesquisaPessoa = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtPesquisaPessoa, KeyEvent.VK_F2, 0);
        jTextFieldNome = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableContas = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jRadioButtonCliente = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRadioButtonCliente, KeyEvent.VK_C, InputEvent.CTRL_DOWN_MASK);
        jRadioButtonFornecedor = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRadioButtonFornecedor, KeyEvent.VK_F, InputEvent.CTRL_DOWN_MASK);
        jComboBoxOperacao = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanelConsulta = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxConsulta = new javax.swing.JComboBox();
        jBtPesquisar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtPesquisar, KeyEvent.VK_F5, 0);
        jTextFieldConsulta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsulta = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jRbSim = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRbSim, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK);
        jRadiobNao = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRadiobNao, KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK);
        jBtRelatorio = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtRelatorio, KeyEvent.VK_F6, 0);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Realizar Pagamento");
        setResizable(false);

        jLabel1.setText("Parcelas da Conta");

        jLabel3.setText("Agência Conta");

        jTextFieldCdAgencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdAgenciaFocusLost(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTextFieldAgenciaConta.setEnabled(false);

        jLabel4.setText("Código do Pagamento");

        jTextFieldCdPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdPagamentoFocusLost(evt);
            }
        });

        jLabel5.setText("Tipo de Pagamento");

        jBtPesquisarTpPagamento.setText("Pesquisar");
        jBtPesquisarTpPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarTpPagamentoActionPerformed(evt);
            }
        });

        jTextFieldCdTipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdTipoFocusLost(evt);
            }
        });

        jTextFieldPagamento.setEnabled(false);

        jBtNovo.setText("Novo Pagamento");
        jBtNovo.setToolTipText("Novo Pagamento (F1)");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar (Esc)");
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtGravar.setText("Gravar");
        jBtGravar.setToolTipText("Gravar (Enter)");
        jBtGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtGravarActionPerformed(evt);
            }
        });

        jLabel2.setText("Contas");

        jTableParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selecionada", "Nr Parcela", "Valor", "Data Vencimento", "Valor Pago", "Data Pagamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableParcelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableParcelasMouseClicked(evt);
            }
        });
        jTableParcelas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTableParcelasPropertyChange(evt);
            }
        });
        jTableParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTableParcelasKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTableParcelas);

        jLabel8.setText("Cliente/Fornecedor");

        jTextFieldCdPessoa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdPessoaFocusLost(evt);
            }
        });

        jBtPesquisaPessoa.setText("Pesquisar");
        jBtPesquisaPessoa.setToolTipText("Pesquisar (F2)");
        jBtPesquisaPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaPessoaActionPerformed(evt);
            }
        });

        jTextFieldNome.setEnabled(false);

        jTableContas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cd Conta", "Descrição", "Cd Venda Compra", "Cd Forma", "Forma", "Valor", "Data Vencimento", "Data Pgto", "Tipo", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableContas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableContasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableContas);

        jLabel9.setText("Tipo");

        btGroupTipo.add(jRadioButtonCliente);
        jRadioButtonCliente.setSelected(true);
        jRadioButtonCliente.setText("Cliente");
        jRadioButtonCliente.setToolTipText("Cliente (Ctrl + C)");

        btGroupTipo.add(jRadioButtonFornecedor);
        jRadioButtonFornecedor.setText("Fornecedor");
        jRadioButtonFornecedor.setToolTipText("Fornecedor (Ctrl + F)");
        jRadioButtonFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFornecedorActionPerformed(evt);
            }
        });

        jLabel7.setText("Operação");

        javax.swing.GroupLayout jPanelPagamentoLayout = new javax.swing.GroupLayout(jPanelPagamento);
        jPanelPagamento.setLayout(jPanelPagamentoLayout);
        jPanelPagamentoLayout.setHorizontalGroup(
            jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(10, 10, 10))
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addComponent(jBtNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldCdPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                                .addComponent(jRadioButtonCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonFornecedor)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldCdPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtPesquisaPessoa)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldCdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtPesquisarTpPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                                .addComponent(jTextFieldCdAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldAgenciaConta)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                                .addComponent(jComboBoxOperacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        jPanelPagamentoLayout.setVerticalGroup(
            jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCdPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jRadioButtonCliente)
                                .addComponent(jRadioButtonFornecedor))
                            .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldCdPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBtPesquisaPessoa)
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagamentoLayout.createSequentialGroup()
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCdAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPesquisar)
                            .addComponent(jTextFieldAgenciaConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesquisarTpPagamento)
                            .addComponent(jTextFieldPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jBtNovo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPagamentoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtCancelar)
                            .addComponent(jBtGravar))))
                .addContainerGap())
        );

        jTabbedPanePagamentos.addTab("Gravar Pagamento", jPanelPagamento);

        jLabel6.setText("Filtro da Consulta");

        jComboBoxConsulta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Código do Pagamento", "Código da Conta", "Descrição da Conta", "Código Agência Conta" }));
        jComboBoxConsulta.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxConsultaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jBtPesquisar.setText("Pesquisar");
        jBtPesquisar.setToolTipText("Pesquisar (F5)");
        jBtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarActionPerformed(evt);
            }
        });

        jTableConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cd Pagamento", "Cd Conta", "Conta", "Nr Parcela", "Valor", "Cd Agência Conta", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableConsulta);

        jLabel10.setText("Ocultar registros inativos ?");

        buttonGroupSituacao.add(jRbSim);
        jRbSim.setSelected(true);
        jRbSim.setText("Sim");
        jRbSim.setToolTipText("Sim (Ctrl + S)");

        buttonGroupSituacao.add(jRadiobNao);
        jRadiobNao.setText("Não");
        jRadiobNao.setToolTipText("Não (Ctrl + N)");

        jBtRelatorio.setText("Relatório");
        jBtRelatorio.setToolTipText("Relatório (F6)");
        jBtRelatorio.setEnabled(false);
        jBtRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConsultaLayout = new javax.swing.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                    .addGroup(jPanelConsultaLayout.createSequentialGroup()
                        .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                                .addComponent(jRbSim)
                                .addGap(18, 18, 18)
                                .addComponent(jRadiobNao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtPesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(jBtRelatorio)))))
                .addContainerGap())
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisar)
                    .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRbSim)
                    .addComponent(jRadiobNao)
                    .addComponent(jBtRelatorio))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePagamentos.addTab("Consultar", jPanelConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePagamentos)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePagamentos)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesquisarTpPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarTpPagamentoActionPerformed
        ConsultaTipoPagamento csTipo = new ConsultaTipoPagamento(this, true);
        csTipo.setVisible(true);

        csTipo.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {

                if (pagamento.getTipo().getCdTipo() == 0) {
                    jTextFieldCdTipo.setText("");
                    jTextFieldPagamento.setText("");
                } else {
                    jTextFieldCdTipo.setText(pagamento.getTipo().getCdTipo().toString());
                    jTextFieldPagamento.setText(pagamento.getTipo().getDsTipo());
                }
            }
        });
    }//GEN-LAST:event_jBtPesquisarTpPagamentoActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        ConsultaAgenciaConta csAgc = new ConsultaAgenciaConta(this, true);
        csAgc.setVisible(true);

        csAgc.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {

                if (pagamento.getAgc().getCdAgcConta() == 0) {
                    jTextFieldCdAgencia.setText("");
                    jTextFieldAgenciaConta.setText("");
                } else {
                    pagamento.getAgc().retornaAgenciaConta(pagamento.getAgc());
                    jTextFieldCdAgencia.setText(pagamento.getAgc().getCdAgcConta().toString());
                    jTextFieldAgenciaConta.setText(pagamento.getAgc().getDsConta());
                }
            }
        });
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldCdTipoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdTipoFocusLost
        if (!jTextFieldCdTipo.getText().equals("")) {
            try {
                pagamento.getTipo().setCdTipo(Integer.parseInt(jTextFieldCdTipo.getText()));
                pagamento.getTipo().retornaTipo(pagamento.getTipo());
                if (pagamento.getTipo().getDsTipo().equals("")) {
                    jTextFieldCdTipo.setText("");
                    jTextFieldPagamento.setText("");
                    jTextFieldCdTipo.grabFocus();
                } else {
                    jTextFieldPagamento.setText(pagamento.getTipo().getDsTipo());
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Informe um código para pesquisar!");
                jTextFieldCdTipo.setText("");
                jTextFieldPagamento.setText("");
                jTextFieldCdTipo.grabFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldCdTipoFocusLost

    private void jTextFieldCdAgenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdAgenciaFocusLost
        if (!jTextFieldCdAgencia.getText().equals("")) {
            try {
                pagamento.getAgc().setCdAgcConta(Integer.parseInt(jTextFieldCdAgencia.getText()));
                pagamento.getAgc().retornaAgenciaConta(pagamento.getAgc());
                if (pagamento.getAgc().getDsConta().equals("")) {
                    jTextFieldCdAgencia.setText("");
                    jTextFieldAgenciaConta.setText("");
                    jTextFieldCdAgencia.grabFocus();
                } else {
                    jTextFieldAgenciaConta.setText(pagamento.getAgc().getDsConta());
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Informe um código para pesquisar!");
                jTextFieldCdAgencia.setText("");
                jTextFieldAgenciaConta.setText("");
                jTextFieldCdAgencia.grabFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldCdAgenciaFocusLost

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        rotina = Rotinas.incluir;
        validaEstadoCampos();
        jTextFieldCdPessoa.grabFocus();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGravarActionPerformed
        if (jTableContas.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione uma conta a ser paga!");
            jTextFieldCdPessoa.grabFocus();
        } else if (jTableParcelas.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Não há parcelas a serem pagas!");
        } else if (parcelasSelecionadas() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione as parcelas a serem pagas!");
        } else if (jTextFieldCdAgencia.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Selecione uma agência conta para este pagamento!");
            jTextFieldCdAgencia.grabFocus();
        } else if (jTextFieldCdTipo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de pagamento!");
            jTextFieldCdTipo.grabFocus();
        } else {
            carregarPagamento();
            JOptionPane.showMessageDialog(null, "Parcela(s) paga(s)!");
            try {
                carregaTabelaContas(Integer.parseInt(jTextFieldCdPessoa.getText()));
                exibirTicket();
            } catch (NumberFormatException ex) {
                int conta;
                int linha;
                try {
                    linha = jTableContas.getSelectedRow();
                    conta = Integer.parseInt(jTableContas.getValueAt(linha, 0).toString());
                    pagamento.getParcelas().getContas().setCdConta(conta);
                    carregarTabelaContas();
                    exibirTicket();
                } catch (Exception e) {
                    conta = Integer.parseInt(jTableContas.getValueAt(0, 0).toString());
                    pagamento.getParcelas().getContas().setCdConta(conta);
                    carregarTabelaContas();
                    exibirTicket();
                }
            }
        }
    }//GEN-LAST:event_jBtGravarActionPerformed

    private void jTableParcelasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableParcelasMouseClicked
        int linha = jTableParcelas.getSelectedRow();
        int coluna = jTableParcelas.getSelectedColumn();
        if (coluna == 4) {
            jTableParcelas.setValueAt("", linha, coluna);
        } else if (coluna == 0 && (boolean) jTableParcelas.getValueAt(linha, 0)) {

            try {
                if (!jTableParcelas.getValueAt(linha, 5).toString().equals("")) {
                    JOptionPane.showMessageDialog(null, "Esta parcela não pode ser selecionada, pois já está paga!");
                    jTableParcelas.setValueAt(false, linha, 0);
                }
            } catch (NullPointerException ex) {
                // não possui data pago
            }
        }
    }//GEN-LAST:event_jTableParcelasMouseClicked

    private void jTableParcelasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableParcelasKeyTyped
        int linha = jTableParcelas.getSelectedRow();
        int coluna = jTableParcelas.getSelectedColumn();
        if (coluna == 4) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                double vlPagar = Double.parseDouble(jTableParcelas.getValueAt(linha, 2).toString());
                try {
                    double valor = Double.parseDouble(jTableParcelas.getValueAt(linha, coluna).toString());
                    if (valor > vlPagar) {
                        JOptionPane.showMessageDialog(null, "Informe um valor válido!");
                        jTableParcelas.setValueAt("0.00", linha, coluna);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Informe um valor válido!");
                    jTableParcelas.setValueAt("0.00", linha, coluna);
                }
            } else {
                ValidaCampos campos = new ValidaCampos();
                campos.validaCamposReais(evt);
            }
        }
    }//GEN-LAST:event_jTableParcelasKeyTyped

    private void jTableParcelasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTableParcelasPropertyChange
        for (int i = 0; i < jTableParcelas.getRowCount(); i++) {
            if (!jTableParcelas.getValueAt(i, 4).equals("")) {
                try {

                    double valorPagar = Double.parseDouble(jTableParcelas.getValueAt(i, 2).toString());
                    double valorPago = Double.parseDouble(jTableParcelas.getValueAt(i, 4).toString());
                    if (valorPago > valorPagar) {
                        JOptionPane.showMessageDialog(null, "O valor informado é maior que o valor da parcela!");
                        jTableParcelas.setValueAt("0.00", i, 4);
                    }

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Informe um valor válido para a parcela");
                    jTableParcelas.setValueAt("0.00", i, 4);
                }
            }
        }
    }//GEN-LAST:event_jTableParcelasPropertyChange

    private void jBtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarActionPerformed
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableConsulta, new int[]{100, 100, 100, 100, 100, 100, 100});

        switch (jComboBoxConsulta.getSelectedIndex()) {
            case 0:
                preencher.PreencherJtableGenerico(jTableConsulta, pagamento.consultarGeral(jRbSim.isSelected()));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
            break;

            case 1:
                try {
                    pagamento.setCdPagamento(Integer.parseInt(jTextFieldConsulta.getText()));
                    preencher.PreencherJtableGenerico(jTableConsulta, pagamento.consultarCdPagamento(pagamento, jRbSim.isSelected()));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                } 
                catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Por favor informe um código para pesquisar!");
                    editaBotao(true);
                }
            break;

            case 2:
                try {
                    pagamento.getParcelas().getContas().setCdConta(Integer.parseInt(jTextFieldConsulta.getText()));
                    preencher.PreencherJtableGenerico(jTableConsulta, pagamento.consultarCdConta(pagamento, jRbSim.isSelected()));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                } 
                catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Por favor informe um código para pesquisar!");
                    editaBotao(true);
                }
            break;

            case 3:
                pagamento.getParcelas().getContas().setDsConta(jTextFieldConsulta.getText().toUpperCase());
                preencher.PreencherJtableGenerico(jTableConsulta, pagamento.consultarDsConta(pagamento, jRbSim.isSelected()));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
            break;

            default:
                try {
                    pagamento.getAgc().setCdAgcConta(Integer.parseInt(jTextFieldConsulta.getText()));
                    preencher.PreencherJtableGenerico(jTableConsulta, pagamento.consultarCdAgencia(pagamento, jRbSim.isSelected()));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                } 
                catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Por favor informe um código para pesquisar!");
                    editaBotao(true);
                }
            break;
        }
    }//GEN-LAST:event_jBtPesquisarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        if (parcelasSelecionadas() > 0) {
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja cancelar o pagamento ?", "Cancelar Pagamento", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                limpar.limparCampos(jPanelPagamento);
                limpar.limparJtable(jTableParcelas);
                limpar.limparJtable(jTableContas);
                rotina = Rotinas.padrao;
                validaEstadoCampos();
            }
        } else {
            limpar.limparCampos(jPanelPagamento);
            limpar.limparJtable(jTableParcelas);
            limpar.limparJtable(jTableContas);
            rotina = Rotinas.padrao;
            validaEstadoCampos();
        }
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jTextFieldCdPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdPagamentoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCdPagamentoFocusLost

    private void jTextFieldCdPessoaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdPessoaFocusLost
        if (!jTextFieldCdPessoa.getText().equals("")) {
            try {
                int cod = Integer.parseInt(jTextFieldCdPessoa.getText());
                if (jRadioButtonCliente.isSelected()) {
                    retornaCliente(cod);
                } else {
                    retornaFornecedor(cod);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Informe um código válido para consultar!");
                limparCamposPessoa();
            }
        }
    }//GEN-LAST:event_jTextFieldCdPessoaFocusLost

    private void jBtPesquisaPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaPessoaActionPerformed
        ConsultaClienteFornecedor consulta = new ConsultaClienteFornecedor(this, true, jRadioButtonCliente.isSelected());
        consulta.setVisible(true);
        consulta.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                if (jRadioButtonCliente.isSelected()) {
                    try {
                        limparCamposPessoa();
                        jTextFieldCdPessoa.setText(pagamento.getParcelas().getContas().getVendaCompra()
                                .getCliente().getCdCliente().toString());
                        jTextFieldNome.setText(pagamento.getParcelas().getContas().getVendaCompra().
                                getCliente().getPessoa().getNome());
                    } catch (NullPointerException ex) {
                        limparCamposPessoa();
                    }
                } else {
                    try {
                        limparCamposPessoa();
                        jTextFieldCdPessoa.setText(pagamento.getParcelas().getContas().getVendaCompra()
                                .getFornecedor().getCdFornecedor().toString());
                        jTextFieldNome.setText(pagamento.getParcelas().getContas().getVendaCompra()
                                .getFornecedor().getPessoa().getNome());
                    } catch (NullPointerException ex) {
                        limparCamposPessoa();
                    }
                }
            }
        });
    }//GEN-LAST:event_jBtPesquisaPessoaActionPerformed

    private void jTableContasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContasMouseClicked
        int linha = jTableContas.getSelectedRow();
        if (linha >= 0) {
            pagamento.getParcelas().getContas().setCdConta(Integer.parseInt(jTableContas.getValueAt(linha, 0).toString()));
            pagamento.getParcelas().getContas().retornaConta(pagamento.getParcelas().getContas(), true);
            int op = pagamento.getParcelas().getContas().retornaOperacaoVendaCompra(pagamento.getParcelas().getContas());
            if (op > 0) {
                jComboBoxOperacao.setSelectedIndex(pagamento.getParcelas().getContas().getVendaCompra()
                        .getOperacao().getOperacao(op));
            } else {
                String tipo = jTableContas.getValueAt(linha, 8).toString();
                if (tipo.equals("A RECEBER")) {
                    tipo = "E";
                } else {
                    tipo = "S";
                }
                pagamento.getParcelas().getContas().getVendaCompra().getOperacao().retornaComboOperacao(jComboBoxOperacao, tipo);
            }
            preencheTabela();
        }
    }//GEN-LAST:event_jTableContasMouseClicked

    private void jRadioButtonFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonFornecedorActionPerformed

    private void jComboBoxConsultaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible

    private void jBtRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRelatorioActionPerformed
        report.setSubreport(false);
        report.setTabela("PAGAMENTO");
        report.gerarRelatorio(report);
        jBtPesquisarActionPerformed(null);
    }//GEN-LAST:event_jBtRelatorioActionPerformed

    public void limparCamposPessoa() {
        jTextFieldCdPessoa.setText("");
        jTextFieldNome.setText("");
        limpar.limparJtable(jTableContas);
        limpar.limparJtable(jTableParcelas);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPagamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btGroupTipo;
    private javax.swing.ButtonGroup buttonGroupSituacao;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtGravar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesquisaPessoa;
    private javax.swing.JButton jBtPesquisar;
    private javax.swing.JButton jBtPesquisarTpPagamento;
    private javax.swing.JButton jBtRelatorio;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JComboBox jComboBoxConsulta;
    private javax.swing.JComboBox jComboBoxOperacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JPanel jPanelPagamento;
    private javax.swing.JRadioButton jRadioButtonCliente;
    private javax.swing.JRadioButton jRadioButtonFornecedor;
    private javax.swing.JRadioButton jRadiobNao;
    private javax.swing.JRadioButton jRbSim;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPanePagamentos;
    private javax.swing.JTable jTableConsulta;
    private javax.swing.JTable jTableContas;
    private javax.swing.JTable jTableParcelas;
    private javax.swing.JTextField jTextFieldAgenciaConta;
    private javax.swing.JTextField jTextFieldCdAgencia;
    private javax.swing.JTextField jTextFieldCdPagamento;
    private javax.swing.JTextField jTextFieldCdPessoa;
    private javax.swing.JTextField jTextFieldCdTipo;
    private javax.swing.JTextField jTextFieldConsulta;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPagamento;
    // End of variables declaration//GEN-END:variables

    public void validaEstadoCampos() {
        ValidaBotoes botoes = new ValidaBotoes();
        botoes.validaEstadoCampos(jPanelPagamento, rotina);
        jTextFieldAgenciaConta.setEnabled(false);
        jTextFieldPagamento.setEnabled(false);
    }

    public void carregarConta(int conta, int parcela) {
        pagamento.getParcelas().getContas().setCdConta(conta);
        carregarTabelaContas();
        preencheTabela();
        //pagamento.getParcelas().getContas().retornaConta(pagamento.getParcelas().getContas(), false);
//        pagamento.getParcelas().setNrParcela(parcela);
//        pagamento.getParcelas().retornaParcela(pagamento.getParcelas());

        jBtNovoActionPerformed(null);
        int linha = retornaLinha(parcela);

        jTableParcelas.setValueAt(true, linha, 0);
        int op = pagamento.getParcelas().getContas().retornaOperacaoVendaCompra(pagamento.getParcelas().getContas());
        if (op > 0) {
            jComboBoxOperacao.setSelectedIndex(pagamento.getParcelas().getContas().getVendaCompra()
                    .getOperacao().getOperacao(op));
            pagamento.getParcelas().getContas().getVendaCompra().retornaVendaCompra(pagamento.getParcelas().getContas().getVendaCompra());

            if (pagamento.getParcelas().getContas().getVendaCompra().getCdVendaCompra() > 0) {
                jTextFieldCdPessoa.setText(pagamento.getParcelas().getContas().getVendaCompra()
                        .getCliente().getPessoa().getCdPessoa().toString());
                jTextFieldNome.setText(pagamento.getParcelas().getContas().getVendaCompra()
                        .getCliente().getPessoa().getNome());
            }
        } else {
            String tipo = jTableContas.getValueAt(0, 8).toString();
            if (tipo.equals("A RECEBER")) {
                tipo = "E";
            } else {
                tipo = "S";
            }
            pagamento.getParcelas().getContas().getVendaCompra().getOperacao().
                    retornaComboOperacao(jComboBoxOperacao, tipo);
        }
        jTextFieldCdAgencia.grabFocus();
    }

    public void preencheTabela() {
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableParcelas, new int[]{105, 110, 110, 110, 110, 110});

        preencher.PreencherJtableGenericoSel(jTableParcelas,
                pagamento.getParcelas().consultarCdConta(pagamento.getParcelas().getContas(), true));
    }

    public void carregaTabelaContas(int cd) {
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableContas, new int[]{50, 100, 95, 60, 100, 70, 90, 80, 80, 80});

        pagamento.getParcelas().getContas().getVendaCompra().getFornecedor().setCdFornecedor(cd);
        pagamento.getParcelas().getContas().getVendaCompra().getCliente().setCdCliente(cd);

        preencher.PreencherJtableGenerico(jTableContas, pagamento.getParcelas().getContas().
                consultarCdPessoa(pagamento.getParcelas().getContas()));
        if (jTableContas.getRowCount() == 1) {
            String tipo = jTableContas.getValueAt(0, 8).toString();
            if (tipo.equals("A RECEBER")) {
                tipo = "E";
            } else {
                tipo = "S";
            }
            pagamento.getParcelas().getContas().getVendaCompra().getOperacao().
                    retornaComboOperacao(jComboBoxOperacao, tipo);
        }
    }

    public void carregarTabelaContas() {
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableContas, new int[]{50, 100, 95, 60, 100, 70, 90, 80, 80, 80});

        preencher.PreencherJtableGenerico(jTableContas, pagamento.getParcelas().getContas().
                consultarCdConta(pagamento.getParcelas().getContas()));
    }

    public int parcelasSelecionadas() {
        int selecionadas = 0;
        if (jTableParcelas.getRowCount() > 0) {
            for (int i = 0; i < jTableParcelas.getRowCount(); i++) {
                if ((boolean) jTableParcelas.getValueAt(i, 0)) {
                    // selecionada
                    selecionadas = selecionadas + 1;
                    parcelas.add(Integer.parseInt(jTableParcelas.getValueAt(i, 1).toString()));
                }
            }
        }
        return selecionadas;
    }

    public void carregarPagamento() {

        int linhas = jTableParcelas.getRowCount();
        int row = jTableContas.getSelectedRow();
        if (row < 0) {
            row = 0;
        }
        // preenche as informações do pagamento 
        pagamento.getParcelas().getContas().setTpConta(jTableContas.getValueAt(row, 8).toString());//se é A PAGAR ou RECEBER
        pagamento.getAgc().setCdAgcConta(Integer.parseInt(jTextFieldCdAgencia.getText()));
        pagamento.getTipo().setCdTipo(Integer.parseInt(jTextFieldCdTipo.getText()));
        pagamento.getParcelas().getContas().getVendaCompra().getOperacao().
                setCdOperacao(pagamento.getParcelas().getContas().getVendaCompra().getOperacao().getOperacao(
                                jComboBoxOperacao.getSelectedIndex()));

        pagamento.getParcelas().getContas().getVendaCompra().getOperacao().retornaOperacao(
                pagamento.getParcelas().getContas().getVendaCompra().getOperacao());

        // percorre as parcelas
        for (int i = 0; i < linhas; i++) {
            if ((boolean) jTableParcelas.getValueAt(i, 0)) {
                double vlPago;
                double vlPagar;
                try {
                    vlPago = Double.parseDouble(jTableParcelas.getValueAt(i, 4).toString());
                    vlPagar = Double.parseDouble(jTableParcelas.getValueAt(i, 2).toString());
                    if (vlPago < vlPagar && vlPago > 0) {
                        gerarNovaParcela(vlPagar - vlPago);
                    } else {
                        vlPago = vlPagar;
                    }
                } catch (NumberFormatException ex) {
                    vlPago = Double.parseDouble(jTableParcelas.getValueAt(i, 2).toString());
                }

                jTableParcelas.setValueAt(vlPago, i, 4);
                jTableParcelas.setValueAt(data.retornaDataAtual(), i, 5);

                // paga a parcela
                pagamento.getParcelas().setDtPago(data.retornaDataAtual());
                pagamento.getParcelas().setVlPago(vlPago);
                pagamento.getParcelas().setNrParcela(Integer.parseInt(jTableParcelas.getValueAt(i, 1).toString()));
                pagamento.getParcelas().pagarParcela(pagamento.getParcelas());

                // grava o pagamento
                pagamento.incluir(pagamento);

                // grava movimentação de caixa
                if (pagamento.getParcelas().getContas().getVendaCompra().getOperacao().getMovFinanceiro().equals("SIM")) {
                    pagamento.gravarMovCaixa(pagamento);
                }
                jTextFieldCdPagamento.setText(pagamento.getCdPagamento().toString());
            }
        }
        preencheTabela();
    }

    public void gerarNovaParcela(double valor) {
        pagamento.getParcelas().setVlParcela(valor);
        pagamento.getParcelas().gerarParcela(pagamento.getParcelas());
    }

    public void retornaFornecedor(int cd) {
        pagamento.getParcelas().getContas().getVendaCompra().getFornecedor().setCdFornecedor(cd);
        pagamento.getParcelas().getContas().getVendaCompra().getFornecedor().retornaFornecedor(
                pagamento.getParcelas().getContas().getVendaCompra().getFornecedor());

        if (pagamento.getParcelas().getContas().getVendaCompra().getFornecedor().getPessoa().getNome().equals("")) {
            limparCamposPessoa();
        } else {
            limparCamposPessoa();
            jTextFieldCdPessoa.setText("" + cd);
            jTextFieldNome.setText(pagamento.getParcelas().getContas().getVendaCompra().getFornecedor().getPessoa().getNome());
            carregaTabelaContas(cd);
        }
    }

    public void retornaCliente(int cd) {
        pagamento.getParcelas().getContas().getVendaCompra().getCliente().setCdCliente(cd);
        pagamento.getParcelas().getContas().getVendaCompra().getCliente().retornaCliente(
                pagamento.getParcelas().getContas().getVendaCompra().getCliente());

        if (pagamento.getParcelas().getContas().getVendaCompra().getCliente().getPessoa().getNome().equals("")) {
            limparCamposPessoa();
        } else {
            limparCamposPessoa();
            jTextFieldCdPessoa.setText("" + cd);
            jTextFieldNome.setText(pagamento.getParcelas().getContas().getVendaCompra().getCliente().getPessoa().getNome());
            carregaTabelaContas(cd);
        }
    }

    public int retornaLinha(int parcela) {
        int row = 0;
        for (int i = 0; i < jTableParcelas.getRowCount(); i++) {
            if (Integer.parseInt(jTableParcelas.getValueAt(i, 1).toString()) == parcela) {
                row = i;
            }
        }
        return row;
    }

    public void editaBotao(boolean vazia) {
        if (vazia) {
            jBtRelatorio.setEnabled(false);
            jTextFieldConsulta.setText("");
            jTextFieldConsulta.grabFocus();
        } else {
            jBtRelatorio.setEnabled(true);
        }
    }

    private void exibirTicket() {
        report.setConsulta(pagamento.consultarTicket(pagamento, parcelas));
        report.setTabela("TICKET_PAGAMENTO");
        report.setSubreport(false);
        report.gerarRelatorio(report);
    }
}
