package Cadastros;

import Classes.Contas;
import Classes.Parcelas;
import Consultas.ConsultaForma;
import Consultas.ConsultaParcelas;
import Relatorios.Relatorios;
import Telas.TelaPagamento;
import Validacoes.FormataMoeda;
import Validacoes.LimparCampos;
import Validacoes.PreencherTabela;
import Validacoes.RetornaData;
import Validacoes.RetornaDecimal;
import Validacoes.Rotinas;
import Validacoes.TeclasdeAtalho;
import Validacoes.ValidaBotoes;
import Validacoes.ValidaCampos;
import java.awt.Dialog;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Leonardo
 */
public class CadastroContas extends javax.swing.JFrame {

    Contas contas = new Contas();
    Relatorios report = new Relatorios();

    ValidaBotoes botoes = new ValidaBotoes();
    LimparCampos limpar = new LimparCampos();
    RetornaData rdata = new RetornaData();
    RetornaDecimal decimal = new RetornaDecimal();

    int rotina;
    double valor = 0;
    MaskFormatter data;

    TeclasdeAtalho atalho = new TeclasdeAtalho();
    /**
     * Creates new form CadastroContas
     */
    public CadastroContas() {
        initComponents();
        rotina = Rotinas.padrao;
        botoes.validaBotoes(jPanelBotoes, rotina);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipo = new javax.swing.ButtonGroup();
        jPopupMenuPagarParcela = new javax.swing.JPopupMenu();
        jMenuItemPagarParcela = new javax.swing.JMenuItem();
        jMenuItemEstornarParcela = new javax.swing.JMenuItem();
        jMenuItemExcluirParcela = new javax.swing.JMenuItem();
        jPopupMenuContas = new javax.swing.JPopupMenu();
        jMenuItemCarregarDados = new javax.swing.JMenuItem();
        jTabbedPaneConta = new javax.swing.JTabbedPane();
        atalho.adicionarAtalho(jTabbedPaneConta);
        jPanelCadastro = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCdConta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCdForma = new javax.swing.JTextField();
        jTextFieldFormaPgto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldDescrição = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jRadioButtonAPagar = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRadioButtonAPagar,
            KeyEvent.VK_P, InputEvent.CTRL_DOWN_MASK);
        jRadioButtonAReceber = new javax.swing.JRadioButton();
        atalho.adicionarAtalho(jRadioButtonAReceber,
            KeyEvent.VK_R, InputEvent.CTRL_DOWN_MASK);
        jLabel8 = new javax.swing.JLabel();
        jTextFieldValor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jBtPesquisarFormaPgto = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtPesquisarFormaPgto, 
            KeyEvent.VK_F4, 0);

        jLabel2 = new javax.swing.JLabel();
        try{       data = new MaskFormatter("##/##/####");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jFormattedTextFieldDataVencimento = new JFormattedTextField(data);
        try{       data = new MaskFormatter("##/##/####");   }   catch(Exception erro)   {   JOptionPane.showMessageDialog(null, "Não foi possivel localizar");   }
        jFormattedTextFieldDataPagamento = new JFormattedTextField(data);
        jLabel4 = new javax.swing.JLabel();
        jComboBoxSituacao = new javax.swing.JComboBox();
        jPanelBotoes = new javax.swing.JPanel();
        jBtCancelar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtCancelar, KeyEvent.VK_ESCAPE, 0);
        jBtGravar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtGravar, KeyEvent.VK_ENTER, 0);
        jBtExcluir = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtExcluir, KeyEvent.VK_F3,0);
        jBtAlterar = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtAlterar, KeyEvent.VK_F2, 0);
        jBtIncluir = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtIncluir, KeyEvent.VK_F1, 0);
        jPanelConsulta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxConsulta = new javax.swing.JComboBox();
        jComboBoxTpConta = new javax.swing.JComboBox();
        jButtonPesquisarConsulta = new javax.swing.JButton();
        atalho.adicionarAtalho(jButtonPesquisarConsulta, KeyEvent.VK_F5, 0);
        jTextFieldConsulta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableContas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableParcelas = new javax.swing.JTable();
        jBtRelatorio = new javax.swing.JButton();
        atalho.adicionarAtalho(jBtRelatorio,   KeyEvent.VK_F6, 0);

        jPopupMenuPagarParcela.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jPopupMenuPagarParcelaPopupMenuWillBecomeVisible(evt);
            }
        });

        jMenuItemPagarParcela.setText("Pagar Parcela");
        jMenuItemPagarParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPagarParcelaActionPerformed(evt);
            }
        });
        jPopupMenuPagarParcela.add(jMenuItemPagarParcela);

        jMenuItemEstornarParcela.setText("Estornar Parcela");
        jMenuItemEstornarParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEstornarParcelaActionPerformed(evt);
            }
        });
        jPopupMenuPagarParcela.add(jMenuItemEstornarParcela);

        jMenuItemExcluirParcela.setText("Excluir Parcela");
        jMenuItemExcluirParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExcluirParcelaActionPerformed(evt);
            }
        });
        jPopupMenuPagarParcela.add(jMenuItemExcluirParcela);

        jMenuItemCarregarDados.setText("Carregar Dados");
        jMenuItemCarregarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCarregarDadosActionPerformed(evt);
            }
        });
        jPopupMenuContas.add(jMenuItemCarregarDados);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Contas");
        setResizable(false);

        jLabel3.setText("Código da Conta");

        jTextFieldCdConta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdContaFocusLost(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 102, 204));
        jLabel5.setText("Forma de Pagamento");

        jTextFieldCdForma.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCdFormaFocusLost(evt);
            }
        });

        jTextFieldFormaPgto.setEnabled(false);

        jLabel6.setForeground(new java.awt.Color(0, 102, 204));
        jLabel6.setText("Descrição");

        jTextFieldDescrição.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDescriçãoKeyTyped(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("Tipo da Conta");

        buttonGroupTipo.add(jRadioButtonAPagar);
        jRadioButtonAPagar.setSelected(true);
        jRadioButtonAPagar.setText("Pagar");
        jRadioButtonAPagar.setToolTipText("Pagar (Ctrl + P)");

        buttonGroupTipo.add(jRadioButtonAReceber);
        jRadioButtonAReceber.setText("Receber");
        jRadioButtonAReceber.setToolTipText("Receber (Ctrl + R)");

        jLabel8.setForeground(new java.awt.Color(0, 102, 204));
        jLabel8.setText("Valor");

        jTextFieldValor.setDocument(new FormataMoeda());
        jTextFieldValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValorFocusLost(evt);
            }
        });
        jTextFieldValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldValorKeyTyped(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(0, 102, 204));
        jLabel9.setText("Data Vencimento");

        jBtPesquisarFormaPgto.setText("Pesquisar");
        jBtPesquisarFormaPgto.setToolTipText("Pesquisar (F4)");
        jBtPesquisarFormaPgto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarFormaPgtoActionPerformed(evt);
            }
        });

        jLabel2.setText("Data Pagamento");

        jFormattedTextFieldDataVencimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldDataVencimentoKeyTyped(evt);
            }
        });

        jFormattedTextFieldDataPagamento.setEnabled(false);

        jLabel4.setText("Situação");

        jComboBoxSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NÃO PAGA", "PAGA" }));
        jComboBoxSituacao.setEnabled(false);

        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar (Esc)");
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtGravar.setText("Gravar");
        jBtGravar.setToolTipText("Gravar (Enter)");
        jBtGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtGravarActionPerformed(evt);
            }
        });

        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir (F3)");
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Alterar (F2)");
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtIncluir.setText("Incluir");
        jBtIncluir.setToolTipText("Incluir (F1)");
        jBtIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIncluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotoesLayout = new javax.swing.GroupLayout(jPanelBotoes);
        jPanelBotoes.setLayout(jPanelBotoesLayout);
        jPanelBotoesLayout.setHorizontalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotoesLayout.setVerticalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBotoesLayout.createSequentialGroup()
                .addGap(0, 17, Short.MAX_VALUE)
                .addGroup(jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtGravar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtIncluir)))
        );

        javax.swing.GroupLayout jPanelCadastroLayout = new javax.swing.GroupLayout(jPanelCadastro);
        jPanelCadastro.setLayout(jPanelCadastroLayout);
        jPanelCadastroLayout.setHorizontalGroup(
            jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldDescrição, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCdConta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCadastroLayout.createSequentialGroup()
                        .addComponent(jRadioButtonAPagar)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonAReceber))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCadastroLayout.createSequentialGroup()
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                                .addComponent(jTextFieldCdForma, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtPesquisarFormaPgto))
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(19, 19, 19))
                                    .addComponent(jFormattedTextFieldDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(79, 79, 79)
                                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jFormattedTextFieldDataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jComboBoxSituacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jTextFieldFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(242, Short.MAX_VALUE))
            .addComponent(jPanelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelCadastroLayout.setVerticalGroup(
            jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCdConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDescrição, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCdForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisarFormaPgto))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonAPagar)
                    .addComponent(jRadioButtonAReceber))
                .addGap(18, 18, 18)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCadastroLayout.createSequentialGroup()
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jFormattedTextFieldDataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jPanelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCadastroLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPaneConta.addTab("Cadastro", jPanelCadastro);

        jLabel1.setText("Filtro da Consulta");

        jComboBoxConsulta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Código", "Descrição", "Tipo", "Situação" }));
        jComboBoxConsulta.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxConsultaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jComboBoxTpConta.setEnabled(false);

        jButtonPesquisarConsulta.setText("Pesquisar");
        jButtonPesquisarConsulta.setToolTipText("Pesquisar (F5)");
        jButtonPesquisarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarConsultaActionPerformed(evt);
            }
        });

        jTableContas.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableContas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Pessoa", "Descrição", "Cd Forma", "Forma Pgto", "Valor", "Data Vencimento", "Data Pgto", "Tipo", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableContas.setComponentPopupMenu(jPopupMenuContas);
        jTableContas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableContasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableContas);

        jTableParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conta", "Nr Parcela", "Valor", "Data Vencimento", "Valor Pago", "Data Pagamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableParcelas.setComponentPopupMenu(jPopupMenuPagarParcela);
        jScrollPane2.setViewportView(jTableParcelas);

        jBtRelatorio.setText("Relatório");
        jBtRelatorio.setToolTipText("Relatório (F6)");
        jBtRelatorio.setEnabled(false);
        jBtRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConsultaLayout = new javax.swing.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConsultaLayout.createSequentialGroup()
                        .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxConsulta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTpConta, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldConsulta)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPesquisarConsulta)
                        .addGap(18, 18, 18)
                        .addComponent(jBtRelatorio))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTpConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisarConsulta)
                    .addComponent(jTextFieldConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtRelatorio))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneConta.addTab("Consulta", jPanelConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneConta, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneConta, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxConsultaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible
        switch(jComboBoxConsulta.getSelectedIndex()){
            case 0:
                jComboBoxTpConta.removeAllItems();
                jComboBoxTpConta.setEnabled(false);
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(false);
            break;    
            
            case 3:
                jComboBoxTpConta.setEnabled(true);
                jComboBoxTpConta.removeAllItems();
                jComboBoxTpConta.addItem("Receber");
                jComboBoxTpConta.addItem("Pagar"); 
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(false);
            break;
                
            case 4:
                jComboBoxTpConta.setEnabled(true);
                jComboBoxTpConta.removeAllItems();
                jComboBoxTpConta.addItem("Paga");
                jComboBoxTpConta.addItem("Não Paga");
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(false);
            break;
                
            default:
                jComboBoxTpConta.removeAllItems();
                jComboBoxTpConta.setEnabled(false);
                jTextFieldConsulta.setText("");
                jTextFieldConsulta.setEnabled(true);
                jTextFieldConsulta.grabFocus();
            break;    
        }
    }//GEN-LAST:event_jComboBoxConsultaPopupMenuWillBecomeInvisible

    private void jButtonPesquisarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarConsultaActionPerformed
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableContas, new int[]{40, 140, 140 ,60, 120, 50, 80, 50, 60, 60});

        switch (jComboBoxConsulta.getSelectedIndex()) {
            case 0:
                preencher.PreencherJtableGenerico(jTableContas, contas.consultarGeral(true));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
                break;

            case 1:
                try {
                    contas.setCdConta(Integer.parseInt(jTextFieldConsulta.getText()));
                    preencher.PreencherJtableGenerico(jTableContas, contas.consultarCdConta(contas, true));
                    report.setConsulta(preencher.getConsulta());
                    editaBotao(preencher.Vazia());
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Por favor informe um código para pesquisar!");
                    editaBotao(true);
                }
                break;

            case 2:
                contas.setDsConta(jTextFieldConsulta.getText().toUpperCase());
                preencher.PreencherJtableGenerico(jTableContas, contas.consultarDescricao(contas, true));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
                break;

            case 3:
                switch (jComboBoxTpConta.getSelectedIndex()) {
                    case 0:
                        contas.setTpConta("R");
                        break;
                    default:
                        contas.setTpConta("P");
                }
                preencher.PreencherJtableGenerico(jTableContas, contas.consultarTipo(contas, true));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
                break;

            default:
                switch (jComboBoxTpConta.getSelectedIndex()) {
                    case 0:
                        contas.setPago("S");
                        break;

                    default:
                        contas.setPago("N");
                }
                preencher.PreencherJtableGenerico(jTableContas, contas.consultarSituacao(contas));
                report.setConsulta(preencher.getConsulta());
                editaBotao(preencher.Vazia());
        }
    }//GEN-LAST:event_jButtonPesquisarConsultaActionPerformed

    private void jTableContasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContasMouseClicked
        Parcelas parcelas = new Parcelas();
        int linha = jTableContas.getSelectedRow();
        if (linha >= 0) {
            contas.setCdConta(Integer.parseInt(jTableContas.getValueAt(linha, 0).toString()));

            PreencherTabela preencher = new PreencherTabela();
            preencher.FormatarJtable(jTableParcelas, new int[]{100, 100, 100, 100, 100, 100});

            preencher.PreencherJtableGenerico(jTableParcelas, parcelas.consultarCdConta(contas,true));
        }
    }//GEN-LAST:event_jTableContasMouseClicked

    private void jMenuItemPagarParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPagarParcelaActionPerformed
        int linha = jTableParcelas.getSelectedRow();
        if (linha >= 0) {
            final int cdConta = Integer.parseInt(jTableParcelas.getValueAt(linha, 0).toString());
            int parcela = Integer.parseInt(jTableParcelas.getValueAt(linha, 1).toString());
            TelaPagamento tela = new TelaPagamento();
            tela.setVisible(true);
            tela.carregarConta(cdConta, parcela);

            tela.addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosed(java.awt.event.WindowEvent evt) {
                    atualizaJtable(cdConta);
                }
            });
        }
    }//GEN-LAST:event_jMenuItemPagarParcelaActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        if (jTextFieldCdConta.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe o código da conta que deseja excluir!");
            jTextFieldCdConta.grabFocus();
        } else {
            try {
                contas.setCdConta(Integer.parseInt(jTextFieldCdConta.getText()));

                int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir esta conta?", 
                        "Excluir conta",JOptionPane.YES_NO_OPTION);
                if (opcao == JOptionPane.YES_OPTION) {

                    if (contas.permiteExclusao(contas)) {
                        contas.excluir(contas);
                        //JOptionPane.showMessageDialog(null, "Conta excluída com sucesso!");
                        rotina = Rotinas.padrao;
                        botoes.validaBotoes(jPanelBotoes, rotina);
                        limpar.limparCampos(jPanelCadastro);
                        botoes.validaEstadoCampos(jPanelCadastro, rotina);
                    } else {
                        JOptionPane.showMessageDialog(null, "Esta conta já possui parcelas pagas, "
                                + "é necessário extornar as parcelas da conta para excluí-la!");
                    }
                }
            } 
            catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Informe um código válido!");
                jTextFieldCdConta.setText("");
                jTextFieldCdConta.grabFocus();
            }
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIncluirActionPerformed
        rotina = Rotinas.incluir;
        botoes.validaEstadoCampos(jPanelCadastro, rotina);
        botoes.validaBotoes(jPanelBotoes, rotina);
        jTextFieldDescrição.grabFocus();
    }//GEN-LAST:event_jBtIncluirActionPerformed

    private void jTextFieldDescriçãoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescriçãoKeyTyped
        ValidaCampos campos = new ValidaCampos();
        campos.validaCamposLimite(evt, jTextFieldDescrição, 30);
    }//GEN-LAST:event_jTextFieldDescriçãoKeyTyped

    private void jBtPesquisarFormaPgtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarFormaPgtoActionPerformed
        ConsultaForma csForma = new ConsultaForma(this, true);
        csForma.setVisible(true);

        csForma.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {

                if (contas.getForma().getCdForma() == 0) {
                    jTextFieldCdForma.setText("");
                    jTextFieldFormaPgto.setText("");
                    jFormattedTextFieldDataVencimento.setText("");
                } else {
                    jTextFieldCdForma.setText(contas.getForma().getCdForma().toString());
                    jTextFieldFormaPgto.setText(contas.getForma().getDsForma());
                    jFormattedTextFieldDataVencimento.setText(rdata.retornaSomaData("",
                            contas.getForma().getIntervalo() * contas.getForma().getQtParcelas()));
                }
            }
        });
    }//GEN-LAST:event_jBtPesquisarFormaPgtoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
//        rotina = Rotinas.alterar;
//        botoes.validaBotoes(jPanelBotoes, rotina);
//        jTextFieldDescrição.grabFocus();
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        rotina = Rotinas.padrao;
        botoes.validaBotoes(jPanelBotoes, rotina);
        limpar.limparCampos(jPanelCadastro);
        jTextFieldCdConta.grabFocus();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGravarActionPerformed
        if (jTextFieldCdForma.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "A forma de pagamento é obrigatória!");
            jTextFieldCdForma.grabFocus();
        } else if (jTextFieldDescrição.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "A descrição é obrigatória");
            jTextFieldDescrição.grabFocus();
        } else if (jTextFieldValor.getText().equals("") || valor < 1) {
            JOptionPane.showMessageDialog(null, "Informe o valor da conta!");
            jTextFieldValor.setText("");
            jTextFieldValor.grabFocus();
        } else if (!rdata.dataValida(jFormattedTextFieldDataVencimento.getText())) {
            JOptionPane.showMessageDialog(null, "Informe uma data válida!");
            jFormattedTextFieldDataVencimento.grabFocus();
        } else {
            gravarConta();

            if (rotina == Rotinas.incluir) {
                contas.incluir(contas, false);
                JOptionPane.showMessageDialog(null, "Conta gravada com sucesso!");
                jTextFieldCdConta.setText(contas.getCdConta().toString());
                // mostra as parcelas geradas
                ConsultaParcelas consulta = new ConsultaParcelas();
                consulta.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
                consulta.setVisible(true);
                consulta.exibirParcelas();
            } else if (rotina == Rotinas.alterar) {
                if (jTextFieldCdConta.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "É preciso informar o código da conta que deseja alterar!");
                    jTextFieldCdConta.grabFocus();
                } else {
                    try {
                        contas.setCdConta(Integer.parseInt(jTextFieldCdConta.getText()));
                        contas.alterar(contas);
                        JOptionPane.showMessageDialog(null, "Conta alterada com sucesso!");
                    } catch (NumberFormatException ex) {

                    }
                }
            }
            rotina = Rotinas.padrao;
            botoes.validaBotoes(jPanelBotoes, rotina);
        }
    }//GEN-LAST:event_jBtGravarActionPerformed

    private void jTextFieldValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorFocusLost
        try {
            valor = Double.parseDouble(jTextFieldValor.getText().replace(".", "").replace(",", "."));
        } catch (NumberFormatException ex) {
            valor = 0;
        }
    }//GEN-LAST:event_jTextFieldValorFocusLost

    private void jFormattedTextFieldDataVencimentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDataVencimentoKeyTyped

    }//GEN-LAST:event_jFormattedTextFieldDataVencimentoKeyTyped

    private void jTextFieldCdFormaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdFormaFocusLost
        if (!jTextFieldCdForma.getText().equals("")) {
            try {
                contas.getForma().setCdForma(Integer.parseInt(jTextFieldCdForma.getText()));
                contas.getForma().retornaForma(contas.getForma());

                if (contas.getForma().getDsForma().equals("")) {
                    jTextFieldCdForma.setText("");
                    jTextFieldFormaPgto.setText("");
                    jFormattedTextFieldDataVencimento.setText("");
                    jTextFieldCdForma.grabFocus();
                } else {
                    jTextFieldFormaPgto.setText(contas.getForma().getDsForma());
                    jFormattedTextFieldDataVencimento.setText(rdata.retornaSomaData("",
                            contas.getForma().getIntervalo() * contas.getForma().getQtParcelas()));
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Informe um código para pesquisar!");
                jTextFieldCdForma.setText("");
                jTextFieldFormaPgto.setText("");
                jFormattedTextFieldDataVencimento.setText("");
            }
        }
    }//GEN-LAST:event_jTextFieldCdFormaFocusLost

    private void jMenuItemCarregarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCarregarDadosActionPerformed
        int linha = jTableContas.getSelectedRow();

        if (linha >= 0) {
            int cd = Integer.parseInt(jTableContas.getValueAt(linha, 0).toString());
            contas.setCdConta(cd);
            contas.retornaConta(contas, true);

            preencherCampos();
            jTabbedPaneConta.setSelectedIndex(0);

            rotina = Rotinas.padrao;
            botoes.validaBotoes(jPanelBotoes, rotina);
        }
    }//GEN-LAST:event_jMenuItemCarregarDadosActionPerformed

    private void jTextFieldCdContaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdContaFocusLost
        if (!jTextFieldCdConta.getText().equals("")) {
            try {
                contas.setCdConta(Integer.parseInt(jTextFieldCdConta.getText()));
                contas.retornaConta(contas, true);
                if (contas.getDsConta().equals("")) {
                    jBtCancelarActionPerformed(null);
                } else {
                    preencherCampos();
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor informe um código!");
                jBtCancelarActionPerformed(null);
            }
        }
    }//GEN-LAST:event_jTextFieldCdContaFocusLost

    private void jPopupMenuPagarParcelaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jPopupMenuPagarParcelaPopupMenuWillBecomeVisible
        int linha = jTableParcelas.getSelectedRow();
        if (linha >= 0) {
            try {
                String valor = jTableParcelas.getValueAt(linha, 4).toString();
                String data = jTableParcelas.getValueAt(linha, 5).toString();
                if (valor.equals("0.00") || data.equals("")) {
                    jMenuItemPagarParcela.setEnabled(true);
                    jMenuItemEstornarParcela.setEnabled(false);
                    jMenuItemExcluirParcela.setEnabled(itemExcluirAtivo());
                } else {
                    jMenuItemPagarParcela.setEnabled(false);
                    jMenuItemExcluirParcela.setEnabled(false);
                    jMenuItemEstornarParcela.setEnabled(true);
                }
            } catch (NullPointerException ex) {
                jMenuItemPagarParcela.setEnabled(true);
                jMenuItemExcluirParcela.setEnabled(itemExcluirAtivo());
                jMenuItemEstornarParcela.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jPopupMenuPagarParcelaPopupMenuWillBecomeVisible

    private void jMenuItemEstornarParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEstornarParcelaActionPerformed
        int linha = jTableParcelas.getSelectedRow();
        if (linha >= 0) {

            int linhaConta = jTableContas.getSelectedRow();
            if (linhaConta < 0) {
                linhaConta = 0;
            }
            int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja extornar esta parcela ?",
                    "Extornar Parcela", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                int conta = Integer.parseInt(jTableParcelas.getValueAt(linha, 0).toString());
                Parcelas p = new Parcelas();
                p.getContas().setCdConta(conta);
                p.getContas().setTpConta(jTableContas.getValueAt(linhaConta, 8).toString());
                p.setNrParcela(Integer.parseInt(jTableParcelas.getValueAt(linha, 1).toString()));
                p.estornarParcela(p,"CONTAS");

                JOptionPane.showMessageDialog(null, "Parcela extornada com sucesso!");
                atualizaJtable(conta);
            }
        }
    }//GEN-LAST:event_jMenuItemEstornarParcelaActionPerformed

    private void jMenuItemExcluirParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExcluirParcelaActionPerformed
        if (jTableParcelas.getSelectedRow() >= 0) {

            int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir esta parcela ?\n"
                    + "O valor desta parcela será adicionado nas parcelas ainda não pagas!", "Excluir Parcela",
                    JOptionPane.YES_NO_OPTION);

            if (opcao == JOptionPane.YES_OPTION) {
                int linha = jTableParcelas.getSelectedRow();

                int conta = Integer.parseInt(jTableParcelas.getValueAt(linha, 0).toString());
                int parcela = Integer.parseInt(jTableParcelas.getValueAt(linha, 1).toString());
                double vl = Double.parseDouble(jTableParcelas.getValueAt(linha, 2).toString());

                Parcelas p = new Parcelas();
                p.getContas().setCdConta(conta);
                p.setNrParcela(parcela);
                //if (p.permiteExclusao(p)){
                    p.setDtVencimento(jTableParcelas.getValueAt(0, 3).toString()); // data da primeira parcela
                    p.setVlParcela(vl);
                    p.excluir(p);
                   
                atualizaJtable(conta);
            }
        }
    }//GEN-LAST:event_jMenuItemExcluirParcelaActionPerformed

    private void jBtRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRelatorioActionPerformed
        report.setSubreport(true);
        report.setTabela("CONTAS_PAGAR_RECEBER");
        report.gerarRelatorio(report);
        jButtonPesquisarConsultaActionPerformed(null);
    }//GEN-LAST:event_jBtRelatorioActionPerformed

    private void jTextFieldValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorKeyTyped
        new ValidaCampos().validaCamposApenasNumeros(evt);
    }//GEN-LAST:event_jTextFieldValorKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroContas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipo;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtGravar;
    private javax.swing.JButton jBtIncluir;
    private javax.swing.JButton jBtPesquisarFormaPgto;
    private javax.swing.JButton jBtRelatorio;
    private javax.swing.JButton jButtonPesquisarConsulta;
    private javax.swing.JComboBox jComboBoxConsulta;
    private javax.swing.JComboBox jComboBoxSituacao;
    private javax.swing.JComboBox jComboBoxTpConta;
    private javax.swing.JFormattedTextField jFormattedTextFieldDataPagamento;
    private javax.swing.JFormattedTextField jFormattedTextFieldDataVencimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItemCarregarDados;
    private javax.swing.JMenuItem jMenuItemEstornarParcela;
    private javax.swing.JMenuItem jMenuItemExcluirParcela;
    private javax.swing.JMenuItem jMenuItemPagarParcela;
    private javax.swing.JPanel jPanelBotoes;
    private javax.swing.JPanel jPanelCadastro;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JPopupMenu jPopupMenuContas;
    private javax.swing.JPopupMenu jPopupMenuPagarParcela;
    private javax.swing.JRadioButton jRadioButtonAPagar;
    private javax.swing.JRadioButton jRadioButtonAReceber;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPaneConta;
    private javax.swing.JTable jTableContas;
    private javax.swing.JTable jTableParcelas;
    private javax.swing.JTextField jTextFieldCdConta;
    private javax.swing.JTextField jTextFieldCdForma;
    private javax.swing.JTextField jTextFieldConsulta;
    private javax.swing.JTextField jTextFieldDescrição;
    private javax.swing.JTextField jTextFieldFormaPgto;
    private javax.swing.JTextField jTextFieldValor;
    // End of variables declaration//GEN-END:variables

    private void gravarConta() {
        contas.setDsConta(jTextFieldDescrição.getText().toUpperCase());
        contas.getForma().setCdForma(Integer.parseInt(jTextFieldCdForma.getText()));
        contas.setVlConta(valor);
        contas.setDtPagamento(jFormattedTextFieldDataVencimento.getText());
        if (jRadioButtonAPagar.isSelected()) {
            contas.setTpConta("P");
        } else {
            contas.setTpConta("R");
        }
        switch (jComboBoxSituacao.getSelectedIndex()) {
            case 0:
                contas.setPago("N");
                break;

            default:
                contas.setPago("S");
        }
    }

    private void preencherCampos() {
        jTextFieldCdConta.setText(contas.getCdConta().toString());
        jTextFieldDescrição.setText(contas.getDsConta());
        jTextFieldCdForma.setText(contas.getForma().getCdForma().toString());
        jTextFieldFormaPgto.setText(contas.getForma().getDsForma());
        jFormattedTextFieldDataVencimento.setText(contas.getDtVencimento());
        jFormattedTextFieldDataPagamento.setText(contas.getDtPagamento());
        valor = contas.getVlConta();
        jTextFieldValor.setText(decimal.retornaDecimal(contas.getVlConta(), 6));
        if (contas.getTpConta().equals("A PAGAR")) {
            jRadioButtonAPagar.setSelected(true);
        } else {
            jRadioButtonAReceber.setSelected(true);
        }
        jComboBoxSituacao.setSelectedItem(contas.getPago());
    }

    private boolean itemExcluirAtivo() {
        boolean ativo = false;
        int linha = jTableParcelas.getSelectedRow();
        for (int i = 0; i < jTableParcelas.getRowCount(); i++) {
            if (i != linha) {
                try {
                    String valor = jTableParcelas.getValueAt(i, 4).toString();
                    String data = jTableParcelas.getValueAt(i, 5).toString();
                    if (valor.equals("0.00") || data.equals("")) {
                        ativo = false;
                    }
                } catch (NullPointerException ex) {
                    ativo = true;
                }
            }
        }
        return ativo;
    }

    private void atualizaJtable(int conta) {
        PreencherTabela preencher = new PreencherTabela();
        preencher.FormatarJtable(jTableContas, new int[]{40, 140, 140 ,60, 120, 50, 80, 50, 60, 60});
        
        contas.setCdConta(conta);
        preencher.PreencherJtableGenerico(jTableContas, contas.consultarCdConta(contas, true));

        Parcelas parcelas = new Parcelas();
        preencher.FormatarJtable(jTableParcelas, new int[]{100, 100, 100, 100, 100, 100});

        preencher.PreencherJtableGenerico(jTableParcelas, parcelas.consultarCdConta(contas,true));
    }

    public void exibirConta(int conta){
        jTabbedPaneConta.setSelectedIndex(1);
        atualizaJtable(conta);
    }
    
    private void editaBotao(boolean vazia) {
        if (vazia) {
            JOptionPane.showMessageDialog(null, "A consulta não encontrou resultados!");
            jBtRelatorio.setEnabled(false);
            jTextFieldConsulta.setText("");
            jTextFieldConsulta.grabFocus();
        } else {
            jBtRelatorio.setEnabled(true);
        }
    }
}
